/*Mod created by peacestorm
Thanks to:
MyNameIsTriXz (for helping with some hacks and stuff to make this mod better)
Ethan061903 (for betatesting)
Desno365 (for some things)
AntiModPE (for helping me with some things)
Do not copy without permission!
For more copyright/permissions, look at the bottom of this file!*/

/*Config (change default settings)*/ 
var theme = "MCPE"; //<-- Default theme; All themes: Alternative, MCPE, Blue
var spamMessage = "SPAM!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"; //Default tap spammer message

/*Todo:
Add themes [MCPE (added),TRANSPARENT (beta 4,5?),ANDROID (beta 4,5?)]
Add more hacks
Add heal/kill button (will maybe be added in beta 4 or 5)
Save theme and other options
*/

/*ModPE.setFoodItem(256,"shovel",2,9999,"Iron Shovel [EATABLE]");
ModPE.setFoodItem(257,"pickaxe",2,9999,"Iron Pickaxe [EATABLE]");
ModPE.setFoodItem(258,"axe",2,9999,"Iron Axe [EATABLE]");
ModPE.setFoodItem(259,"flint_and_steel",0,9999,"Flint and Steel [EATABLE]");
ModPE.setFoodItem(262,"arrow",0,9999,"Arrow [EATABLE]");
ModPE.setFoodItem(263,"coal",0,9999,"Coal [EATABLE]");
ModPE.setFoodItem(264,"diamond",0,9999,"Diamond [EATABLE]");
ModPE.setFoodItem(265,"iron_ingot",0,9999,"Iron Ingot [EATABLE]");
ModPE.setFoodItem(266,"gold_ingot",0,9999,"Gold Ingot [EATABLE]");
ModPE.setFoodItem(267,"sword",2,9999,"Iron Sword [EATABLE]");
ModPE.setFoodItem(268,"sword",0,9999,"Wooden Sword [EATABLE]");
ModPE.setFoodItem(269,"shovel",0,9999,"Wooden Shovel [EATABLE]");
ModPE.setFoodItem(270,"pickaxe",0,9999,"Wooden Pickaxe [EATABLE]");
ModPE.setFoodItem(271,"axe",0,9999,"Wooden Axe [EATABLE]");
ModPE.setFoodItem(272,"sword",1,9999,"Stone Sword [EATABLE]");
ModPE.setFoodItem(273,"shovel",1,9999,"Stone Shovel [EATABLE]");
ModPE.setFoodItem(274,"pickaxe",1,9999,"Stone Pickaxe [EATABLE]");
ModPE.setFoodItem(275,"axe",1,9999,"Stone Axe [EATABLE]");
ModPE.setFoodItem(276,"sword",4,9999,"Diamond Sword [EATABLE]");
ModPE.setFoodItem(277,"shovel",4,9999,"Diamond Shovel [EATABLE]");
ModPE.setFoodItem(278,"pickaxe",4,9999,"Diamond Pickaxe [EATABLE]");
ModPE.setFoodItem(279,"axe",4,9999,"Diamond Axe [EATABLE]");
ModPE.setFoodItem(280,"stick",0,9999,"Stick [EATABLE]");
ModPE.setFoodItem(281,"bowl",0,9999,"Bowl [EATABLE]");
ModPE.setFoodItem(283,"sword",3,9999,"Golden Sword [EATABLE]");
ModPE.setFoodItem(284,"shovel",3,9999,"Golden Shovel [EATABLE]");
ModPE.setFoodItem(285,"pickaxe",3,9999,"Golden Pickaxe [EATABLE]");
ModPE.setFoodItem(286,"axe",3,9999,"Golden Axe [EATABLE]");
ModPE.setFoodItem(287,"string",0,9999,"String [EATABLE]");
ModPE.setFoodItem(288,"feather",0,9999,"Feather [EATABLE]");
ModPE.setFoodItem(289,"gunpowder",0,9999,"Gunpowder [EATABLE]");
ModPE.setFoodItem(290,"hoe",0,9999,"Wooden Hoe [EATABLE]");
ModPE.setFoodItem(291,"hoe",1,9999,"Stone Hoe [EATABLE]");
ModPE.setFoodItem(292,"hoe",2,9999,"Iron Hoe [EATABLE]");
ModPE.setFoodItem(293,"hoe",4,9999,"Diamond Hoe [EATABLE]");
ModPE.setFoodItem(294,"hoe",3,9999,"Golden Hoe [EATABLE]");
ModPE.setFoodItem(359,"shears",0,9999,"Shears [EATABLE]");*/

// add these variables in your mod
const CURRENT_VERSION = "1.0.0-pre";
var latestVersion;

var currentActivity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var sdcard = android.os.Environment.getExternalStorageDirectory();

var defaultDestroyTimeAll = [
null, 1.5, 0.6, 0.5, 2, 2, 0, -1, null, null, null, null, 0.5, 0.6, 3, 3, 3, 2, 0.2, 0.6, 0.3, 3, 3, null, 0.8, null, 0.2, 0.7, null, null, 4, 0, 0, null, null, 0.8, null, 0, 0, 0, 0, 3, 5, 2, 2, 2, 0, 1.5, 2, 50, 0, 0, null, 2, 2.5, null, 3, 5, 2.5, 0, 0.6, 3.5, 3.5, 1, 3, 0.4, 0.7, 2, 1, null, null, 5, null, 3, 3, null, null, null, 0.1, 0.5, 0.2, 0.4, 0.6, 0, null, 2, 1, 0.4, 0.3, null, 1, 0.5, null, null, -1, 3, null, 1.5, null, null, 5, 0.3, 1, 0, 0, null, 2, 2, 1.5, null, null, 2, null, 2, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.8, null, null, null, null, null, 2, 2, 2, null, null, 2, null, 0, 0, null, null, null, null, null, null, null, null, null, null, null, null, 0.8, 0.8, 2, 2, null, null, null, null, null, null, null, null, null, null, null, 0.5, 0.1, 5, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, 3.5, 50, 5, 0.6, 0.6, 5, null, null, null, null, 0
];

Block.setDestroyTimeAll = function(destroyTime){
	for (i = 0; i < 256; i++) {
    Block.setDestroyTime(i,destroyTime);
	}
}

Block.setDestroyTimeDefaultAll = function(){
	for (i = 0; i < 256; i++) {
    Block.setDestroyTime(i,defaultDestroyTimeAll[i]);
	}
}

function newLevel(){
        // check for updates
        new java.lang.Thread(new java.lang.Runnable()
        {
                run: function()
                {
                        checkLatestVersionMyMod();
                        if(latestVersion != CURRENT_VERSION && latestVersion != undefined)
                        {
                                // do something when the user doesn't have the latest version
                                clientMessage(ChatColor.BLUE+"[AgameR MoreOptions PE]"+ChatColor.WHITE+" There is a new version available (v"+latestVersion+")!");
                        }
                        else
                        {
                                currentActivity.runOnUiThread(new java.lang.Runnable(){run: function(){
                                        android.widget.Toast.makeText(currentActivity, new android.text.Html.fromHtml("<b>AgameR MoreOptions PE</b> You have the latest version"), 0).show();
                                }});
                        }
                }
        }).start();
}
 
 
function checkLatestVersionMyMod()
{
        try
        {
                // download content
                var httpClient = android.net.http.AndroidHttpClient.newInstance("No User Agent");
                var entity = httpClient.execute(new org.apache.http.client.methods.HttpGet("https://raw.githubusercontent.com/peacestorm/ModPE-scripts/master/version/agamer-moreoptionspe-version")).getEntity(); // change this url with your url
 
                // get content
                inputStream = entity.getContent();
 
                // read result
                var loadedVersion = "";
                var bufferedVersionReader = new java.io.BufferedReader(new java.io.InputStreamReader(inputStream));
                var rowVersion = "";
                while((rowVersion = bufferedVersionReader.readLine()) != null)
                {
                        loadedVersion += rowVersion;
                }
                latestVersion = loadedVersion.split(" ")[0];
 
                // close what needs to be closed
                httpClient.close();
                bufferedVersionReader.close();
        }catch(err)
        {
                clientMessage(ChatColor.BLUE+"[AgameR MoreOptions PE]"+ChatColor.WHITE+" Can't check for updates, please check your Internet connection.");
                ModPE.log("[AgameR MoreOptions PE] checkLatestVersionMyMod() caught an error: " + err);
        }
}

/*OptiFine things*/
Block.defineBlock(2,"Grass Block",[["dirt",0],["grass",2],["grass",2],["grass",2],["grass",2],["grass",2]],2);
Block.setDestroyTime(2,0.6);
/*---------------*/

var crossButtonPosition = "right"; //<-- Cross button position

var path = android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/com.mojang";
var minecraftFont;
var mcpeFont = "  ";
//var settingsIcon = " iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAIAAADZrBkAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAAFCSURBVDhPlY7/SsJQFMfvq+zeu102386BN/slxtpIW39EQaRoYCWK0JaVlQQhPoCB/qUPEdQDdO7OtihoLvbh8N0557MzMn0arhZvyHIxW85naVZ1rjrYT6e+7ysN+B7gduKsooDgDjimsMj0WWmNupsTUxRMA7To2q9ZBkpT1xKtGXUzKgY4ZYnCv67tQwUHDpLJYzgZhY2ac15zsisCf6iuvT4EwJlXzYkwLKGb5GU4AE6cyqlT+fx4B7KzMITQDTIOeuOgf1zdBnD8Z95TWeeGwQUZDbrA0U45F7tlTnXOdHLX69z3O/XN0nq2VKWUM8ZJeN2+7V4cbNi5kDbVOKOcBFetm8uWWyrmhGmMajTWPFn0pJ1dUQMHTKUB6cfWkl5rSynxhVEG4WemaYagMmrNQxffsRXvJUtpPw7wQNDoF3gj74+Vc8xUAAAAAElFTkSuQmCC ";
var settingsIcon = " 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 ";
var mcpeButtonIcon = " iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAABhSURBVEhLY9izcTVNEW0tKExNB1kwta2RRkhDXYvGFqhpDnUf0N6C0SAigEZTEUE0mooIotFURBCNpiKCaDQVEUSjqYggGk1FBBEoFRWlpgNDCsgCIy0EwhTErwyrrLoWAI4KV9f/jHdkAAAAAElFTkSuQmCC ";
var mcpeExitButtonIcon = " iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAAHMSURBVDhPjZDbSgJRFIb3qzgHx3oE38nCySxRyvJQGIFk2IUJBuLUdDQC6XBfN3XVCxgk5Eus1loza9weggY+9t7/+te/1x71fOfD5/tbwEe4/snrAu0NqtUqcNBL/3Kh4T9QSMJZAkUhL30fjsvbTCNcdUgTZj0JZ5kJJ/LnzEylONcomkDTJOI8kQ8UFpiC4s/3kOGz1jgeDWGMun4hhfBEFETP4wI2SkgUFjbQnoJEj4LkaU+35/CIHJW2oIGIURrHo68pTXTxR08bXHswuO5BfbcA9Z08JJPJ6aaZlSAP+xHHTjDqwe8CcbiVi5AwvVnOVNO9ju0w6t7rQL/XgYPCBlMrZHmV/0FPY8KwWj47Ab1xywHbioO66baB2NvMMPu5TBigTRKG8R4hj3gt0wbLsEFdnbXgstOCStaF8no6aoxCFpxprWTT7DcMi1EX7RM4R0prq7Drrga3a830Twh9QoK8hBGzwESUd9oED4OK6RQjP1pCiu4KbC/QSSu6KTANk1Fem4KaXBDIKOagYRI2radwIgMnwqAeT9RkUYpi1Bsm+yCU9wiFBBNhkOu6QTIKcgOPjOusrp91TdEXNYbNUtSNs7qOGTPhF1U7V2AcJE8CAAAAAElFTkSuQmCC "
var mcpeBackground = " iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAtZJREFUeF7tmMGJXEEMRDedTcHgm0++G2xwCHP0xQGYyWBzcXRrXjOvqdV8B1DQByGppFJDMd2f0cvfPz/f325fl/3+9mnZFfbj8+uHur6d/0JAYzaQ3+/3jTkw69SsN/PXL8ACQObYzCWKt/NfUON2u20g1QQjVz29uFgzfwlgkQJkMXEHctDE2vnrDZAk0QYNzD5jjAPFW/nrDcgCj0c2eEjGeVA7fz+CNgDaYBMHXOFYO3+/AYLpVdZm+2ZNrJG/BMAELGaeptLEcpv5W4BZxDt4kjDvWjv/6Qpg2cynQxyMgVdxK//DZ/BqyP+Muj3N/P1fwMKv71+WdxAxB9CMJyfOejN/XwGbjNNrmTugnb8FSFXIeSTMxZJIzEDjVv7ZBxDQmA3kKCjmwKxTs97MP/sA1OBbKZBqgpGrnl5crJm/H0E8Bchi4g7koIm1888+QNUEeTyywUMyzoPa+WcfMMH0KmuzfbMm1shfAmACFjNPU2liuc38LcAs4h08SZh3rZ3/dAWwbObTIQ7GwKu4lX/2ASSSsbMPeMTptcwd0M7fAqQq5DwS5mJJJGagcSv/7AMIaMwGchQUc2DWqVlv5p99AGrwrRRINcHIVU8vLtbM348gngJkMXEHctDE2vlnH6Bqgjwe2eAhGedB7fyzD5hgepW12b5ZE2vkLwEwAYuZp6k0sdxm/hZgFvEOniTMu9bOf7oCWDbz6RAHY+BV3Mo/+wASydjZBzzi9FrmDmjnbwFSFXIeCXOxJBIz0LiVf/YBBDRmAzkKijkw69SsN/PPPgA1+FYKpJpg5KqnFxdr5u9HEE8Bspi4AzloYu38sw9QNUEej2zwkIzzoHb+2QdMML3K2mzfrIk18pcAmIDFzNNUmlhuM38LMIt4B08S5l1r5z9dASyb+XSIgzHwKm7ln30AiWTs7AMecXotcwe087cAqQo5j4S5WBKJGWjcyX99/wcRaXxvqKBwrwAAAABJRU5ErkJggg== "
var blueButtonIcon = " iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAtZJREFUeF7tmMGJXEEMRDedTcHgm0++G2xwCHP0xQGYyWBzcXRrXjOvqdV8B1DQByGppFJDMd2f0cvfPz/f325fl/3+9mnZFfbj8+uHur6d/0JAYzaQ3+/3jTkw69SsN/PXL8ACQObYzCWKt/NfUON2u20g1QQjVz29uFgzfwlgkQJkMXEHctDE2vnrDZAk0QYNzD5jjAPFW/nrDcgCj0c2eEjGeVA7fz+CNgDaYBMHXOFYO3+/AYLpVdZm+2ZNrJG/BMAELGaeptLEcpv5W4BZxDt4kjDvWjv/6Qpg2cynQxyMgVdxK//DZ/BqyP+Muj3N/P1fwMKv71+WdxAxB9CMJyfOejN/XwGbjNNrmTugnb8FSFXIeSTMxZJIzEDjVv7ZBxDQmA3kKCjmwKxTs97MP/sA1OBbKZBqgpGrnl5crJm/H0E8Bchi4g7koIm1888+QNUEeTyywUMyzoPa+WcfMMH0KmuzfbMm1shfAmACFjNPU2liuc38LcAs4h08SZh3rZ3/dAWwbObTIQ7GwKu4lX/2ASSSsbMPeMTptcwd0M7fAqQq5DwS5mJJJGagcSv/7AMIaMwGchQUc2DWqVlv5p99AGrwrRRINcHIVU8vLtbM348gngJkMXEHctDE2vlnH6Bqgjwe2eAhGedB7fyzD5hgepW12b5ZE2vkLwEwAYuZp6k0sdxm/hZgFvEOniTMu9bOf7oCWDbz6RAHY+BV3Mo/+wASydjZBzzi9FrmDmjnbwFSFXIeCXOxJBIz0LiVf/YBBDRmAzkKijkw69SsN/PPPgA1+FYKpJpg5KqnFxdr5u9HEE8Bspi4AzloYu38sw9QNUEej2zwkIzzoHb+2QdMML3K2mzfrIk18pcAmIDFzNNUmlhuM38LMIt4B08S5l1r5z9dASyb+XSIgzHwKm7ln30AiWTs7AMecXotcwe087cAqQo5j4S5WBKJGWjcyX99/wcRaXxvqKBwrwAAAABJRU5ErkJggg== "

Base64Decode(android.util.Base64.decode(mcpeFont,0), path + "/minecraft.ttf");
Base64Decode(android.util.Base64.decode(settingsIcon, 0), path + "/settings.png");
Base64Decode(android.util.Base64.decode(mcpeButtonIcon, 0), path + "/mcpebutton.png");
Base64Decode(android.util.Base64.decode(mcpeExitButtonIcon, 0), path + "/mcpeexitbutton.png");
Base64Decode(android.util.Base64.decode(mcpeBackground, 0), path + "/mcpebackground.png");

function Base64Decode(byteArray, Path) {
    try {
        var File = new java.io.File(Path);
        if (!File.exists()) {
            File.createNewFile();
            var Stream = new java.io.FileOutputStream(File);
            Stream.write(byteArray);
            Stream.close();
        }
		mcpeFont = new android.graphics.Typeface.createFromFile(path + "/minecraft.ttf");
		} catch (err) {
        print(err);
		}
}

var GUI;
var menu;
var exitUI;

var sBtn = new android.graphics.BitmapFactory.decodeFile(android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/com.mojang/settings.png");
var mcpeBtn = new android.graphics.BitmapFactory.decodeFile(android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/com.mojang/mcpebutton.png");
var mcpeExitBtn = new android.graphics.BitmapFactory.decodeFile(android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/com.mojang/mcpeexitbutton.png");
//var mcpeBckgrnd = new android.graphics.BitmapFactory.decodeFile(android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/com.mojang/mcpebackground.png");

var settingsButton = new android.graphics.drawable.BitmapDrawable(sBtn);
var mcpeButtonImage = new android.graphics.drawable.BitmapDrawable(mcpeBtn);
var mcpeExitButtonImage = new android.graphics.drawable.BitmapDrawable(mcpeExitBtn);
//var mcpeBackgroundImage = new android.graphics.drawable.BitmapDrawable(mcpeBckgrnd);

var State = false;
var State1 = false;
var State2 = false;
var State3 = false;
var State4 = false;
var State5 = false;
var State6 = false;
var State7 = false;
var State8 = false;
var State9 = false;
var State10 = false;
var State11 = false;
var State12 = false;
var State13 = false;
var State14 = false;
var State15 = false;

function destroyBlock(x,y,z,side){
    var data = Level.getData(x,y,z);
    var tile = Level.getTile(x,y,z);
	var gamemode = Level.getGameMode();
	if(gamemode==0){
    if(State14==true){
        if(tile==1 && getCarriedItem()==270 || tile==1 && getCarriedItem()==257 || tile==1 && getCarriedItem()==274 || tile==1 && getCarriedItem()==278 || tile==1 && getCarriedItem()==285 || tile==4 && getCarriedItem()==270 || tile==4 && getCarriedItem()==257 || tile==4 && getCarriedItem()==274 || tile==4 && getCarriedItem()==278 || tile==4 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,4,63);
        }
        else if(tile==1 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285 || tile==4 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,4,64);
        }
        if(tile==2 || tile==3){
            Level.dropItem(x,y,z,0.5,3,63);
        }
        if(tile==5 || tile==6 || tile==12 || tile==13){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==14 && getCarriedItem()==257 || tile==14 && getCarriedItem()==278 || tile==14 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,14,63);
        }
        else if(tile==14 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,14,64);
        }
        if(tile==15 && getCarriedItem()==257 || tile==15 && getCarriedItem()==274 || tile==15 && getCarriedItem()==278 || tile==15 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,15,63);
        }
        else if(tile==15 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,15,64);
        }
        if(tile==16 && getCarriedItem()==270 || tile==16 && getCarriedItem()==257 || tile==16 && getCarriedItem()==274 || tile==16 && getCarriedItem()==278 || tile==16 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,263,63);
        }
        else if(tile==16 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,263,64);
        }
        if(tile==17){
            Level.dropItem(x,y,z,0.5,17,63,data);
        }
        if(tile==18 && getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,18,63);
        }
        else if(tile==18 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,18,64);
        }
        if(tile==19 || tile==20){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==21 && getCarriedItem()==257 || tile==21 && getCarriedItem()==274 || tile==21 && getCarriedItem()==278 || tile==21 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,21,63);
        }
        else if(tile==21 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,21,64);
        }
        if(tile==22 && getCarriedItem()==257 || tile==22 && getCarriedItem()==274 || tile==22 && getCarriedItem()==278 || tile==22 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,22,63);
        }
        else if(tile==22 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,22,64);
        }
        if(tile==24 && getCarriedItem()==270 || tile==24 && getCarriedItem()==257 || tile==24 && getCarriedItem()==274 || tile==24 && getCarriedItem()==278 || tile==24 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,24,63);
        }
        else if(tile==24 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,24,64);
        }
        if(tile==26){
            Level.dropItem(x,y,z,0.5,26,63,data);
        }
        if(tile==27 && getCarriedItem()==270 || tile==27 && getCarriedItem()==257 || tile==27 && getCarriedItem()==274 || tile==27 && getCarriedItem()==278 || tile==27 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,27,63);
        }
        else if(tile==27 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,27,64);
        }
        if(tile==30 && getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,287,63);
        }
        else if(tile==30 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,287,64);
        }
        if(tile==31 && getCarriedItem()==359 || tile==32 & getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        else if(tile==31 && getCarriedItem()!=359 || tile==32 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,tile,64,data);
        }
        if(tile==37 || tile==38 || tile==39 || tile==40){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==41 && getCarriedItem()==257 || tile==41 && getCarriedItem()==278 || tile==41 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,41,63);
        }
        else if(tile==41 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,41,64);
        }
        if(tile==42 && getCarriedItem()==257 || tile==42 && getCarriedItem()==274 || tile==42 && getCarriedItem()==278 || tile==42 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,42,63);
        }
        else if(tile==42 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,42,64);
        }
        if(tile==44 && getCarriedItem()==257 || tile==44 && getCarriedItem()==270 || tile==44 && getCarriedItem()==274 || tile==44 && getCarriedItem()==278 || tile==44 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,44,63);
        }
        else if(tile==44 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,44,64);
        }
        if(tile==45 && getCarriedItem()==270 || tile==45 && getCarriedItem()==257 || tile==45 && getCarriedItem()==274 || tile==45 && getCarriedItem()==278 || tile==45 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,45,63);
        }
        else if(tile==45 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,45,64);
        }
        if(tile==47){
            Level.dropItem(x,y,z,0.5,340,61);
        }
        if(tile==48 && getCarriedItem()==270 || tile==48 && getCarriedItem()==257 || tile==48 && getCarriedItem()==274 || tile==48 && getCarriedItem()==278 || tile==48 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,48,63);
        }
        else if(tile==48 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,48,64);
        }
        if(tile==49 && getCarriedItem()==278 || tile==246 && getCarriedItem()==278){
            Level.dropItem(x,y,z,0.5,49,63);
        }
        else if(tile==49 && getCarriedItem()!=278 || tile==246 && getCarriedItem()!=278){
            Level.dropItem(x,y,z,0.5,49,64);
        }
        if(tile==50 || tile==53 || tile==54){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==56 && getCarriedItem()==257 || tile==57 && getCarriedItem()==257 || tile==56 && getCarriedItem()==278 || tile==57 && getCarriedItem()==278 || tile==56 && getCarriedItem()==285 || tile==57 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        else if(tile==56 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285 || tile==57 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,tile,64);
        }
        if(tile==61 && getCarriedItem()==270 || tile==61 && getCarriedItem()==257 || tile==61 && getCarriedItem()==274 || tile==61 && getCarriedItem()==278 || tile==61 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,61,63);
        }
        else if(tile==61 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,61,64);
        }
        if(tile==63 || tile==64 || tile==65 || tile==66){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==67 && getCarriedItem()==270 || tile==67 && getCarriedItem()==257 || tile==67 && getCarriedItem()==274 || tile==67 && getCarriedItem()==278 || tile==67 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,67,63);
        }
        else if(tile==67 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,67,64);
        }
        if(tile==73 && getCarriedItem()==257 || tile==73 && getCarriedItem()==278 || tile==73 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,331,63);
        }
        else if(tile==73 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,331,64);
        }
        if(tile==78 && getCarriedItem()==256 || tile==78 && getCarriedItem()==269 || tile==78 && getCarriedItem()==273 || tile==78 && getCarriedItem()==277 || tile==78 && getCarriedItem()==284){
            Level.dropItem(x,y,z,0.5,332,63);
        }
        else if(tile==78 && getCarriedItem()!=256 && getCarriedItem()!=269 && getCarriedItem()!=273 && getCarriedItem()!=277 && getCarriedItem()!=284){
            Level.dropItem(x,y,z,0.5,332,64);
        }
        if(tile==80 && getCarriedItem()==256 || tile==80 && getCarriedItem()==269 || tile==80 && getCarriedItem()==273 || tile==80 && getCarriedItem()==277 || tile==80 && getCarriedItem()==284){
            Level.dropItem(x,y,z,0.5,332,60);
        }
        else if(tile==80 && getCarriedItem()!=256 && getCarriedItem()!=269 && getCarriedItem()!=273 && getCarriedItem()!=277 && getCarriedItem()!=284){
            Level.dropItem(x,y,z,0.5,332,64);
        }
        if(tile==81 || tile==82 || tile==83 || tile==85 || tile==86 || tile==89 || tile==91 || tile==96 || tile==102 || tile==107){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==87 && getCarriedItem()==257 || tile==87 && getCarriedItem()==270 || tile==87 && getCarriedItem()==274 || tile==87 && getCarriedItem()==278 || tile==87 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,87,63);
        }
        else if(tile==87 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,87,64);
        }
        if(tile==98 && getCarriedItem()==257 || tile==98 && getCarriedItem()==270 || tile==98 && getCarriedItem()==274 || tile==98 && getCarriedItem()==278 || tile==98 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,98,63);
        }
        else if(tile==98 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,98,64);
        }
        if(tile==101 && getCarriedItem()==257 || tile==101 && getCarriedItem()==270 || tile==101 && getCarriedItem()==274 || tile==101 && getCarriedItem()==278 || tile==101 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,101,63);
        }
        else if(tile==101 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,101,64);
        }
        if(tile==103){
            Level.dropItem(x,y,z,0.5,360,57);
        }
        if(tile==108 && getCarriedItem()==257 || tile==108 && getCarriedItem()==270 || tile==108 && getCarriedItem()==274 || tile==108 && getCarriedItem()==278 || tile==108 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,108,63);
        }
        else if(tile==108 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,108,64);
        }
        if(tile==109 && getCarriedItem()==257 || tile==109 && getCarriedItem()==270 || tile==109 && getCarriedItem()==274 || tile==109 && getCarriedItem()==278 || tile==109 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,109,63);
        }
        else if(tile==109 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,109,64);
        }
        if(tile==112 && getCarriedItem()==257 || tile==112 && getCarriedItem()==270 || tile==112 && getCarriedItem()==274 || tile==112 && getCarriedItem()==278 || tile==112 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,112,63);
        }
        else if(tile==112 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,112,64);
        }
        if(tile==114 && getCarriedItem()==257 || tile==114 && getCarriedItem()==270 || tile==114 && getCarriedItem()==274 || tile==114 && getCarriedItem()==278 || tile==114 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,114,63);
        }
        else if(tile==114 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,114,64);
        }
        if(tile==128 && getCarriedItem()==257 || tile==128 && getCarriedItem()==270 || tile==128 && getCarriedItem()==274 || tile==128 && getCarriedItem()==278 || tile==128 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,128,63);
        }
        else if(tile==128 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,128,64);
        }
        if(tile==134 || tile==135 || tile==136 || tile==158 || tile==170 || tile==171 || tile==245 || tile==247){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==139 && getCarriedItem()==257 || tile==139 && getCarriedItem()==270 || tile==139 && getCarriedItem()==274 || tile==139 && getCarriedItem()==278 || tile==139 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,139,63);
        }
        else if(tile==139 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,139,64);
        }
        if(tile==155 && getCarriedItem()==257 || tile==155 && getCarriedItem()==270 || tile==155 && getCarriedItem()==274 || tile==155 && getCarriedItem()==278 || tile==155 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,155,63);
        }
        else if(tile==155 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,155,64);
        }
        if(tile==156 && getCarriedItem()==257 || tile==156 && getCarriedItem()==270 || tile==156 && getCarriedItem()==274 || tile==156 && getCarriedItem()==278 || tile==156 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,156,63);
        }
        else if(tile==156 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,156,64);
        }
        if(tile==173 && getCarriedItem()==257 || tile==173 && getCarriedItem()==270 || tile==173 && getCarriedItem()==274 || tile==173 && getCarriedItem()==278 || tile==173 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,173,63);
        }
        else if(tile==173 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,173,64);
        }
        if(tile==244 && getCarriedItem()==257 || tile==244 && getCarriedItem()==270 || tile==244 && getCarriedItem()==274 || tile==244 && getCarriedItem()==278 || tile==244 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,457,63);
        }
        else if(tile==244 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,457,64);
        }
        if(tile==250){
            Level.dropItem(x,y,z,0,247,64);
		}}
    }
}

function leaveGame(){
	State = false;
	State1 = false;
	State2 = false;
	State3 = false;
	State4 = false;
	State5 = false;
	State6 = false;
	State7 = false;
	State8 = false;
	State9 = false;
	State10 = false;
	State11 = false;
	State12 = false;
	State13 = false;
	State14 = false;
	State15 = false;
	closeMenu();
}

function dip2px(dips){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}
//Add menu button
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
try{
var layout = new android.widget.LinearLayout(ctx);
layout.setOrientation(1);
var menuBtn = new android.widget.Button(ctx);
menuBtn.setBackgroundDrawable(settingsButton);
menuBtn.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
mainMenu();
exit();
}
}));
layout.addView(menuBtn);

GUI = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
GUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
GUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 90, 0);
}catch(err){
print('An error occured: ' + err);
}
}}));

function mainMenu(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
try{
var menuLayout = new android.widget.LinearLayout(ctx);
var menuScroll = new android.widget.ScrollView(ctx);
var menuLayout1 = new android.widget.LinearLayout(ctx);
menuLayout.setOrientation(1);
menuLayout1.setOrientation(1);
menuScroll.addView(menuLayout);
menuLayout1.addView(menuScroll);
//--------Add Title--------//
var name = new android.widget.TextView(ctx);
name.setTextSize(20);
name.setText("AgameR MoreOptions PE");//Title
//name.setTypeface(mcpeFont);
name.setTextColor(android.graphics.Color.WHITE); //Color
name.setGravity(android.view.Gravity.CENTER);
if(theme=="Blue"){
name.setTypeface(mcpeFont);
}

menuLayout.addView(name);
//--------Add Buttons-------//
var version = new android.widget.TextView(ctx);
version.setTextSize(15);
version.setText("v"+CURRENT_VERSION);//Title
//version.setTypeface(mcpeFont);
version.setTextColor(android.graphics.Color.WHITE); //Color
version.setGravity(android.view.Gravity.CENTER);
if(theme=="Blue"){
version.setTypeface(mcpeFont);
}

menuLayout.addView(version);

var hacksTitle = new android.widget.TextView(ctx);
hacksTitle.setTextSize(12);
hacksTitle.setText("\nHacks");//Title
//hacksTitle.setTypeface(mcpeFont);
hacksTitle.setTextColor(android.graphics.Color.WHITE); //Color
hacksTitle.setGravity(android.view.Gravity.CENTER);
if(theme=="Blue"){
hacksTitle.setTypeface(mcpeFont);
}

menuLayout.addView(hacksTitle);

var button = new android.widget.Button(ctx);
if(State==false&&theme=="Alternative"){
	Entity.setCollisionSize(Player.getEntity(), 1, 2);
	button.setText("Walk through blocks | OFF");
	button.setBackgroundColor(android.graphics.Color.RED);
}else if(State==true&&theme=="Alternative"){
	Entity.setCollisionSize(Player.getEntity(), 0, 0);
	button.setText("Walk through blocks | ON");
	button.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State==false&&theme=="MCPE"){
	Entity.setCollisionSize(Player.getEntity(), 1, 2);
	button.setText("Walk through blocks | OFF");
	//button.setTypeface(mcpeFont);
	button.setBackgroundDrawable(mcpeButtonImage);
}else if(State==true&&theme=="MCPE"){
	Entity.setCollisionSize(Player.getEntity(), 0, 0);
	button.setText("Walk through blocks | ON");
	//button.setTypeface(mcpeFont);
	button.setBackgroundDrawable(mcpeButtonImage);
}
button.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State==false&&theme=="Alternative"){
    State = true;
    Entity.setCollisionSize(Player.getEntity(), 0, 0);
	button.setText("Walk through blocks | ON");
	button.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State==true&&theme=="Alternative"){
	State = false;
	Entity.setCollisionSize(Player.getEntity(), 1, 2);
	button.setText("Walk through blocks | OFF");
	button.setBackgroundColor(android.graphics.Color.RED);
	}else if(State==false&&theme=="MCPE"){
    State = true;
    Entity.setCollisionSize(Player.getEntity(), 0, 0);
	button.setText("Walk through blocks | ON");
	//button.setTypeface(mcpeFont);
	button.setBackgroundDrawable(mcpeButtonImage);
	}else if(State==true&&theme=="MCPE"){
	State = false;
	Entity.setCollisionSize(Player.getEntity(), 1, 2);
	button.setText("Walk through blocks | OFF");
	//button.setTypeface(mcpeFont);
	button.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button);

var button1 = new android.widget.Button(ctx);
if(State1==false&&theme=="Alternative"){
	button1.setText("No attack damage | OFF");
	button1.setBackgroundColor(android.graphics.Color.RED);
}else if(State1==true&&theme=="Alternative"){
	button1.setText("No attack damage | ON");
	button1.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State1==false&&theme=="MCPE"){
	button1.setText("No attack damage | OFF");
	//button1.setTypeface(mcpeFont);
	button1.setBackgroundDrawable(mcpeButtonImage);
}else if(State1==true&&theme=="MCPE"){
	button1.setText("No attack damage | ON");
	//button1.setTypeface(mcpeFont);
	button1.setBackgroundDrawable(mcpeButtonImage);
}

button1.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State1==false&&theme=="Alternative"){
	State1 = true;
	button1.setText("No attack damage | ON");
	button1.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State1==true&&theme=="Alternative"){
	State1 = false;
	button1.setText("No attack damage | OFF");
	button1.setBackgroundColor(android.graphics.Color.RED);
	}else if(State1==false&&theme=="MCPE"){
	State1 = true;
	button1.setText("No attack damage | ON");
	//button1.setTypeface(mcpeFont);
	button1.setBackgroundDrawable(mcpeButtonImage);
	}else if(State1==true&&theme=="MCPE"){
	State1 = false;
	button1.setText("No attack damage | OFF");
	//button1.setTypeface(mcpeFont);
	button1.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button1);

var button2 = new android.widget.Button(ctx);
if(State2==false&&theme=="Alternative"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = false;
	button2.setText("Fly | OFF");
	Player.setCanFly(0);
	}
	button2.setBackgroundColor(android.graphics.Color.RED);
}else if(State2==true&&theme=="Alternative"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
	}
	button2.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State2==false&&theme=="MCPE"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = false;
	button2.setText("Fly | OFF");
	Player.setCanFly(0);
	}
	//button2.setTypeface(mcpeFont);
	button2.setBackgroundDrawable(mcpeButtonImage);
}else if(State2==true&&theme=="MCPE"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
	}
	//button2.setTypeface(mcpeFont);
	button2.setBackgroundDrawable(mcpeButtonImage);
}

button2.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State2==false&&theme=="Alternative"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
	}
	button2.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State2==true&&theme=="Alternative"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = false;
	button2.setText("Fly | OFF");
	Player.setCanFly(0);
	}
	button2.setBackgroundColor(android.graphics.Color.RED);
	}else if(State2==false&&theme=="MCPE"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
	}
	//button2.setTypeface(mcpeFont);
	button2.setBackgroundDrawable(mcpeButtonImage);
	}else if(State2==true&&theme=="MCPE"){
	if(Level.getGameMode()==1){
	State2 = true;
	button2.setText("Fly | ON");
	Player.setCanFly(1);
    }else if(Level.getGameMode()==0){
	State2 = false;
	button2.setText("Fly | OFF");
	Player.setCanFly(0);
	}
	//button2.setTypeface(mcpeFont);
	button2.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button2);

var button3 = new android.widget.Button(ctx);
if(State3==false&&theme=="Alternative"){
button3.setText("Set entities on fire | OFF");
button3.setBackgroundColor(android.graphics.Color.RED);
}else if(State3==true&&theme=="Alternative"){
button3.setText("Set entities on fire | ON");
button3.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State3==false&&theme=="MCPE"){
button3.setText("Set entities on fire | OFF");
//button3.setTypeface(mcpeFont);
button3.setBackgroundDrawable(mcpeButtonImage);
}else if(State3==true&&theme=="MCPE"){
button3.setText("Set entities on fire | ON");
//button3.setTypeface(mcpeFont);
button3.setBackgroundDrawable(mcpeButtonImage);
}

button3.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State3==false&&theme=="Alternative"){
	State3 = true;
	button3.setText("Set entities on fire | ON");
	button3.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State3==true&&theme=="Alternative"){
	State3 = false;
	button3.setText("Set entities on fire | OFF");
	button3.setBackgroundColor(android.graphics.Color.RED);
	}else if(State3==false&&theme=="MCPE"){
	State3 = true;
	button3.setText("Set entities on fire | ON");
	//button3.setTypeface(mcpeFont);
	button3.setBackgroundDrawable(mcpeButtonImage);
	}else if(State3==true&&theme=="MCPE"){
	State3 = false;
	button3.setText("Set entities on fire | OFF");
	//button3.setTypeface(mcpeFont);
	button3.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button3);

var button4 = new android.widget.Button(ctx);
if(State4==false&&theme=="Alternative"){
	ModPE.setGameSpeed(20);
	button4.setText("Gamespeed x2 | OFF");
	button4.setBackgroundColor(android.graphics.Color.RED);
}else if(State4==true&&theme=="Alternative"){
	ModPE.setGameSpeed(40);
	button4.setText("Gamespeed x2 | ON");
	button4.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State4==false&&theme=="MCPE"){
	ModPE.setGameSpeed(20);
	button4.setText("Gamespeed x2 | OFF");
	//button4.setTypeface(mcpeFont);
	button4.setBackgroundDrawable(mcpeButtonImage);
}else if(State4==true&&theme=="MCPE"){
	ModPE.setGameSpeed(40);
	button4.setText("Gamespeed x2 | ON");
	//button4.setTypeface(mcpeFont);
	button4.setBackgroundDrawable(mcpeButtonImage);
}
button4.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State4==false&&theme=="Alternative"){
	State4 = true;
	ModPE.setGameSpeed(40);
	button4.setText("Gamespeed x2 | ON");
	button4.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State4==true&&theme=="Alternative"){
	State4 = false;
	ModPE.setGameSpeed(20);
	button4.setText("Gamespeed x2 | OFF");
	button4.setBackgroundColor(android.graphics.Color.RED);
	}else if(State4==false&&theme=="MCPE"){
	State4 = true;
	ModPE.setGameSpeed(40);
	button4.setText("Gamespeed x2 | ON");
	button4.setBackgroundDrawable(mcpeButtonImage);
 }else if(State4==true&&theme=="MCPE"){
	State4 = false;
	ModPE.setGameSpeed(20);
	button4.setText("Gamespeed x2 | OFF");
	//button4.setTypeface(mcpeFont);
	button4.setBackgroundDrawable(mcpeButtonImage);
 }
}
}));
menuLayout.addView(button4);

var button5 = new android.widget.Button(ctx);
if(State5==false&&theme=="Alternative"){
 button5.setText("TapSpammer | OFF");
 button5.setBackgroundColor(android.graphics.Color.RED);
}else if(State5==true&&theme=="Alternative"){
 button5.setText("TapSpammer | ON");
 button5.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State5==false&&theme=="MCPE"){
 button5.setText("TapSpammer | OFF");
 //button5.setTypeface(mcpeFont);
 button5.setBackgroundDrawable(mcpeButtonImage);
}else if(State5==true&&theme=="MCPE"){
 button5.setText("TapSpammer | ON");
 //button5.setTypeface(mcpeFont);
 button5.setBackgroundDrawable(mcpeButtonImage);
}
button5.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State5==false&&theme=="Alternative"){
	State5 = true;
	button5.setText("TapSpammer | ON");
	button5.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State5==true&&theme=="Alternative"){
	State5 = false;
	button5.setText("TapSpammer | OFF");
	button5.setBackgroundColor(android.graphics.Color.RED);
	}else if(State5==false&&theme=="MCPE"){
	State5 = true;
	button5.setText("TapSpammer | ON");
	//button5.setTypeface(mcpeFont);
	button5.setBackgroundDrawable(mcpeButtonImage);
	}else if(State5==true&&theme=="MCPE"){
	State5 = false;
	button5.setText("TapSpammer | OFF");
	//button5.setTypeface(mcpeFont);
	button5.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button5);

var button6 = new android.widget.Button(ctx);
if(State6==false&&theme=="Alternative"){
 button6.setText("Sneaking | OFF");
 button6.setBackgroundColor(android.graphics.Color.RED);
 Entity.setSneaking(Player.getEntity(), 0);
}else if(State6==true&&theme=="Alternative"){
 button6.setText("Sneaking | ON");
 button6.setBackgroundColor(android.graphics.Color.GREEN);
 Entity.setSneaking(Player.getEntity(), 1);
}else if(State6==false&&theme=="MCPE"){
 button6.setText("Sneaking | OFF");
 //button6.setTypeface(mcpeFont);
 button6.setBackgroundDrawable(mcpeButtonImage);
 Entity.setSneaking(Player.getEntity(), 0);
}else if(State6==true&&theme=="MCPE"){
 button6.setText("Sneaking | ON");
 //button6.setTypeface(mcpeFont);
 button6.setBackgroundDrawable(mcpeButtonImage);
 Entity.setSneaking(Player.getEntity(), 1);
}
button6.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State6==false&&theme=="Alternative"){
	State6 = true;
	Entity.setSneaking(Player.getEntity(), 1);
	button6.setText("Sneaking | ON");
	button6.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State6==true&&theme=="Alternative"){
	State6 = false;
	Entity.setSneaking(Player.getEntity(), 0);
	button6.setText("Sneaking | OFF");
	button6.setBackgroundColor(android.graphics.Color.RED);
	}else if(State6==false&&theme=="MCPE"){
	State6 = true;
	Entity.setSneaking(Player.getEntity(), 1);
	button6.setText("Sneaking | ON");
	//button6.setTypeface(mcpeFont);
	button6.setBackgroundDrawable(mcpeButtonImage);
	}else if(State6==true&&theme=="MCPE"){
	State6 = false;
	Entity.setSneaking(Player.getEntity(), 0);
	button6.setText("Sneaking | OFF");
	//button6.setTypeface(mcpeFont);
	button6.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button6);

var button7 = new android.widget.Button(ctx);
if(State7==false&&theme=="Alternative"){
 button7.setText("Zoom | OFF");
 button7.setBackgroundColor(android.graphics.Color.RED);
 ModPE.resetFov();
}else if(State7==true&&theme=="Alternative"){
 button7.setText("Zoom | ON");
 button7.setBackgroundColor(android.graphics.Color.GREEN);
 ModPE.setFov(10);
}else if(State7==false&&theme=="MCPE"){
 button7.setText("Zoom | OFF");
 //button7.setTypeface(mcpeFont);
 button7.setBackgroundDrawable(mcpeButtonImage);
 ModPE.resetFov();
}else if(State7==true&&theme=="MCPE"){
 button7.setText("Zoom | ON");
 //button7.setTypeface(mcpeFont);
 button7.setBackgroundDrawable(mcpeButtonImage);
 ModPE.setFov(10);
}
button7.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State7==false&&theme=="Alternative"){
	State7 = true;
	ModPE.setFov(10);
	button7.setText("Zoom | ON");
	button7.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State7==true&&theme=="Alternative"){
	State7 = false;
	ModPE.resetFov();
	button7.setText("Zoom | OFF");
	button7.setBackgroundColor(android.graphics.Color.RED);
	}else if(State7==false&&theme=="MCPE"){
	State7 = true;
	ModPE.setFov(10);
	button7.setText("Zoom | ON");
	//button7.setTypeface(mcpeFont);
	button7.setBackgroundDrawable(mcpeButtonImage);
	}else if(State7==true&&theme=="MCPE"){
	State7 = false;
	ModPE.resetFov();
	button7.setText("Zoom | OFF");
	//button7.setTypeface(mcpeFont);
	button7.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button7);

var button8 = new android.widget.Button(ctx);
if(State8==false&&theme=="Alternative"){
	button8.setText("Show coords | OFF");
	button8.setBackgroundColor(android.graphics.Color.RED);
}else if(State8==true&&theme=="Alternative"){
	button8.setText("Show coords | ON");
	button8.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State8==false&&theme=="MCPE"){
	button8.setText("Show coords | OFF");
	//button8.setTypeface(mcpeFont);
	button8.setBackgroundDrawable(mcpeButtonImage);
}else if(State8==true&&theme=="MCPE"){
	button8.setText("Show coords | ON");
	//button8.setTypeface(mcpeFont);
	button8.setBackgroundDrawable(mcpeButtonImage);
}

button8.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State8==false&&theme=="Alternative"){
	State8 = true;
	button8.setText("Show coords | ON");
	button8.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State8==true&&theme=="Alternative"){
	State8 = false;
	button8.setText("Show coords | OFF");
	button8.setBackgroundColor(android.graphics.Color.RED);
	}else if(State8==false&&theme=="MCPE"){
	State8 = true;
	button8.setText("Show coords | ON");
	//button8.setTypeface(mcpeFont);
	button8.setBackgroundDrawable(mcpeButtonImage);
	}else if(State8==true&&theme=="MCPE"){
	State8 = false;
	button8.setText("Show coords | OFF");
	//button8.setTypeface(mcpeFont);
	button8.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button8);

var button9 = new android.widget.Button(ctx);
if(State9==false&&theme=="Alternative"){
	Block.setDestroyTimeDefaultAll();
	button9.setText("InstaMine | OFF");
	button9.setBackgroundColor(android.graphics.Color.RED);
}else if(State9==true&&theme=="Alternative"){
	Block.setDestroyTimeAll(0);
	button9.setText("InstaMine | ON");
	button9.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State9==false&&theme=="MCPE"){
	Block.setDestroyTimeDefaultAll();
	button9.setText("InstaMine | OFF");
	//button8.setTypeface(mcpeFont);
	button9.setBackgroundDrawable(mcpeButtonImage);
}else if(State9==true&&theme=="MCPE"){
	Block.setDestroyTimeAll(0);
	button9.setText("InstaMine | ON");
	//button8.setTypeface(mcpeFont);
	button9.setBackgroundDrawable(mcpeButtonImage);
}

button9.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State9==false&&theme=="Alternative"){
	State9 = true;
	Block.setDestroyTimeAll(0);
	button9.setText("InstaMine | ON");
	button9.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State9==true&&theme=="Alternative"){
	State9 = false;
	Block.setDestroyTimeDefaultAll(0);
	button9.setText("InstaMine | OFF");
	button9.setBackgroundColor(android.graphics.Color.RED);
	}else if(State9==false&&theme=="MCPE"){
	State9 = true;
	Block.setDestroyTimeAll(0);
	button9.setText("InstaMine | ON");
	//button8.setTypeface(mcpeFont);
	button9.setBackgroundDrawable(mcpeButtonImage);
	}else if(State9==true&&theme=="MCPE"){
	State9 = false;
	Block.setDestroyTimeDefaultAll();
	button9.setText("InstaMine | OFF");
	//button8.setTypeface(mcpeFont);
	button9.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button9);

var button10 = new android.widget.Button(ctx);
if(State10==false&&theme=="Alternative"){
	button10.setText("Knockback | OFF");
	button10.setBackgroundColor(android.graphics.Color.RED);
}else if(State10==true&&theme=="Alternative"){
	button10.setText("Knockback | ON");
	button10.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State10==false&&theme=="MCPE"){
	button10.setText("Knockback | OFF");
	//button10.setTypeface(mcpeFont);
	button10.setBackgroundDrawable(mcpeButtonImage);
}else if(State10==true&&theme=="MCPE"){
	button10.setText("Knockback | ON");
	//button10.setTypeface(mcpeFont);
	button10.setBackgroundDrawable(mcpeButtonImage);
}

button10.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State10==false&&theme=="Alternative"){
	State10 = true;
	State10.setText("Knockback | ON");
	button10.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State10==true&&theme=="Alternative"){
	State10 = false;
	button10.setText("Knockback | OFF");
	button10.setBackgroundColor(android.graphics.Color.RED);
	}else if(State10==false&&theme=="MCPE"){
	State10 = true;
	button10.setText("Knockback | ON");
	//button8.setTypeface(mcpeFont);
	button10.setBackgroundDrawable(mcpeButtonImage);
	}else if(State10==true&&theme=="MCPE"){
	State10 = false;
	button10.setText("Knockback | OFF");
	//button8.setTypeface(mcpeFont);
	button10.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button10);

var button11 = new android.widget.Button(ctx);
if(State11==false&&theme=="Alternative"){
	xRay(0);
	button11.setText("X-Ray | OFF");
	button11.setBackgroundColor(android.graphics.Color.RED);
}else if(State11==true&&theme=="Alternative"){
	xRay(1);
	button11.setText("X-Ray | ON");
	button11.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State11==false&&theme=="MCPE"){
	xRay(0);
	button11.setText("X-Ray | OFF");
	//button11.setTypeface(mcpeFont);
	button11.setBackgroundDrawable(mcpeButtonImage);
}else if(State11==true&&theme=="MCPE"){
	xRay(1);
	button11.setText("X-Ray | ON");
	//button11.setTypeface(mcpeFont);
	button11.setBackgroundDrawable(mcpeButtonImage);
}

button11.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State11==false&&theme=="Alternative"){
	State11 = true;
	xRay(1);
	State11.setText("X-Ray | ON");
	button11.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State11==true&&theme=="Alternative"){
	State11 = false;
	xRay(0);
	button11.setText("X-Ray | OFF");
	button11.setBackgroundColor(android.graphics.Color.RED);
	}else if(State11==false&&theme=="MCPE"){
	State11 = true;
	xRay(1);
	button11.setText("X-Ray | ON");
	//button11.setTypeface(mcpeFont);
	button11.setBackgroundDrawable(mcpeButtonImage);
	}else if(State11==true&&theme=="MCPE"){
	State11 = false;
	xRay(0);
	button11.setText("X-Ray | OFF");
	//button11.setTypeface(mcpeFont);
	button11.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button11);

var button12 = new android.widget.Button(ctx);
if(State12==false&&theme=="Alternative"){
	button12.setText("Always day | OFF");
	button12.setBackgroundColor(android.graphics.Color.RED);
}else if(State12==true&&theme=="Alternative"){
	button12.setText("Always day | ON");
	button12.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State12==false&&theme=="MCPE"){
	button12.setText("Always day | OFF");
	//button11.setTypeface(mcpeFont);
	button12.setBackgroundDrawable(mcpeButtonImage);
}else if(State12==true&&theme=="MCPE"){
	button12.setText("Always day | ON");
	//button11.setTypeface(mcpeFont);
	button12.setBackgroundDrawable(mcpeButtonImage);
}

button12.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State12==false&&theme=="Alternative"){
	State12 = true;
	button12.setText("Always day | ON");
	button12.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State12==true&&theme=="Alternative"){
	State12 = false;
	button12.setText("Always day | OFF");
	button12.setBackgroundColor(android.graphics.Color.RED);
	}else if(State12==false&&theme=="MCPE"){
	State12 = true;
	button12.setText("Always day | ON");
	//button12.setTypeface(mcpeFont);
	button12.setBackgroundDrawable(mcpeButtonImage);
	}else if(State12==true&&theme=="MCPE"){
	State12 = false;
	button12.setText("Always day | OFF");
	//button12.setTypeface(mcpeFont);
	button12.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button12);

var button13 = new android.widget.Button(ctx);
if(State13==false&&theme=="Alternative"){
	button13.setText("Saddle Up | OFF");
	button13.setBackgroundColor(android.graphics.Color.RED);
}else if(State13==true&&theme=="Alternative"){
	button13.setText("Saddle Up | ON");
	button13.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State13==false&&theme=="MCPE"){
	button13.setText("Saddle Up | OFF");
	//button13.setTypeface(mcpeFont);
	button13.setBackgroundDrawable(mcpeButtonImage);
}else if(State13==true&&theme=="MCPE"){
	button13.setText("Saddle Up | ON");
	//button13.setTypeface(mcpeFont);
	button13.setBackgroundDrawable(mcpeButtonImage);
}

button13.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State13==false&&theme=="Alternative"){
	State13 = true;
	button13.setText("Saddle Up | ON");
	button13.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State13==true&&theme=="Alternative"){
	State13 = false;
	button13.setText("Saddle Up | OFF");
	button13.setBackgroundColor(android.graphics.Color.RED);
	}else if(State13==false&&theme=="MCPE"){
	State13 = true;
	button13.setText("Saddle Up | ON");
	//button13.setTypeface(mcpeFont);
	button13.setBackgroundDrawable(mcpeButtonImage);
	}else if(State13==true&&theme=="MCPE"){
	State13 = false;
	button13.setText("Saddle Up | OFF");
	//button13.setTypeface(mcpeFont);
	button13.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button13);

var button14 = new android.widget.Button(ctx);
if(State14==false&&theme=="Alternative"){
	button14.setText("StackDrop | OFF");
	button14.setBackgroundColor(android.graphics.Color.RED);
}else if(State14==true&&theme=="Alternative"){
	button14.setText("StackDrop | ON");
	button14.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State14==false&&theme=="MCPE"){
	button14.setText("StackDrop | OFF");
	//button14.setTypeface(mcpeFont);
	button14.setBackgroundDrawable(mcpeButtonImage);
}else if(State14==true&&theme=="MCPE"){
	button14.setText("StackDrop | ON");
	//button14.setTypeface(mcpeFont);
	button14.setBackgroundDrawable(mcpeButtonImage);
}

button14.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State14==false&&theme=="Alternative"){
	State14 = true;
	button14.setText("StackDrop | ON");
	button14.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State14==true&&theme=="Alternative"){
	State14 = false;
	button14.setText("StackDrop | OFF");
	button14.setBackgroundColor(android.graphics.Color.RED);
	}else if(State14==false&&theme=="MCPE"){
	State14 = true;
	button14.setText("StackDrop | ON");
	//button14.setTypeface(mcpeFont);
	button14.setBackgroundDrawable(mcpeButtonImage);
	}else if(State14==true&&theme=="MCPE"){
	State14 = false;
	button14.setText("StackDrop | OFF");
	//button14.setTypeface(mcpeFont);
	button14.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button14);

var button15 = new android.widget.Button(ctx);
if(State15==false&&theme=="Alternative"){
	button15.setText("TapTeleporter | OFF");
	button15.setBackgroundColor(android.graphics.Color.RED);
}else if(State15==true&&theme=="Alternative"){
	button15.setText("TapTeleporter | ON");
	button15.setBackgroundColor(android.graphics.Color.GREEN);
}else if(State15==false&&theme=="MCPE"){
	button15.setText("TapTeleporter | OFF");
	//button15.setTypeface(mcpeFont);
	button15.setBackgroundDrawable(mcpeButtonImage);
}else if(State15==true&&theme=="MCPE"){
	button15.setText("TapTeleporter | ON");
	//button15.setTypeface(mcpeFont);
	button15.setBackgroundDrawable(mcpeButtonImage);
}

button15.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(State15==false&&theme=="Alternative"){
	State15 = true;
	button15.setText("TapTeleporter | ON");
	button15.setBackgroundColor(android.graphics.Color.GREEN);
	}else if(State15==true&&theme=="Alternative"){
	State15 = false;
	button15.setText("TapTeleporter | OFF");
	button15.setBackgroundColor(android.graphics.Color.RED);
	}else if(State15==false&&theme=="MCPE"){
	State15 = true;
	button15.setText("TapTeleporter | ON");
	//button15.setTypeface(mcpeFont);
	button15.setBackgroundDrawable(mcpeButtonImage);
	}else if(State15==true&&theme=="MCPE"){
	State15 = false;
	button15.setText("TapTeleporter | OFF");
	//button15.setTypeface(mcpeFont);
	button15.setBackgroundDrawable(mcpeButtonImage);
	}
}
}));
menuLayout.addView(button15);

var cheatsTitle = new android.widget.TextView(ctx);
cheatsTitle.setTextSize(12);
cheatsTitle.setText("\nCheats");//Title
//cheatsTitle.setTypeface(mcpeFont);
cheatsTitle.setTextColor(android.graphics.Color.WHITE); //Color
cheatsTitle.setGravity(android.view.Gravity.CENTER);
if(theme=="Blue"){
cheatsTitle.setTypeface(mcpeFont);
}

menuLayout.addView(cheatsTitle);

var otherButton1 = new android.widget.Button(ctx);
if(theme=="Alternative"){
	otherButton1.setText("Add item to inventory");
	otherButton1.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
	otherButton1.setText("Add item to inventory");
	//otherButton1.setTypeface(mcpeFont);
	otherButton1.setBackgroundDrawable(mcpeButtonImage);
}

otherButton1.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(theme=="Alternative"){
	otherButton1.setText("Add item to inventory");
	otherButton1.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"){
	otherButton1.setText("Add item to inventory");
	//otherButton1.setTypeface(mcpeFont);
	otherButton1.setBackgroundDrawable(mcpeButtonImage);
	}openMenu("additem");
}
}));
menuLayout.addView(otherButton1);

var otherButton2 = new android.widget.Button(ctx);
if(theme=="Alternative"){
	otherButton2.setText("Gamemode");
	otherButton2.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
	otherButton2.setText("Gamemode");
	//otherButton2.setTypeface(mcpeFont);
	otherButton2.setBackgroundDrawable(mcpeButtonImage);
}

otherButton2.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(theme=="Alternative"){
	otherButton2.setText("Gamemode");
	otherButton2.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"){
	otherButton2.setText("Gamemode");
	//otherButton2.setTypeface(mcpeFont);
	otherButton2.setBackgroundDrawable(mcpeButtonImage);
	}openMenu("gamemode");
}
}));
menuLayout.addView(otherButton2);

var otherButton3 = new android.widget.Button(ctx);
if(theme=="Alternative"){
	otherButton3.setText("Time");
	otherButton3.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
	otherButton3.setText("Time");
	//otherButton3.setTypeface(mcpeFont);
	otherButton3.setBackgroundDrawable(mcpeButtonImage);
}

otherButton3.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(theme=="Alternative"){
	otherButton3.setText("Time");
	otherButton3.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"){
	otherButton3.setText("Time");
	//otherButton3.setTypeface(mcpeFont);
	otherButton3.setBackgroundDrawable(mcpeButtonImage);
	}openMenu("time");
}
}));
menuLayout.addView(otherButton3);

var otherButton4 = new android.widget.Button(ctx);
if(theme=="Alternative"){
	otherButton4.setText("Health");
	otherButton4.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
	otherButton4.setText("Health");
	//otherButton4.setTypeface(mcpeFont);
	otherButton4.setBackgroundDrawable(mcpeButtonImage);
}

otherButton4.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	if(theme=="Alternative"){
	otherButton4.setText("Health");
	otherButton4.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"){
	otherButton4.setText("Health");
	//otherButton4.setTypeface(mcpeFont);
	otherButton4.setBackgroundDrawable(mcpeButtonImage);
	}openMenu("health");
}
}));
menuLayout.addView(otherButton4);

var infoTitle = new android.widget.TextView(ctx);
infoTitle.setTextSize(12);
infoTitle.setText("\nInfo");//Title
infoTitle.setTextColor(android.graphics.Color.WHITE); //Color
infoTitle.setGravity(android.view.Gravity.CENTER);
if(theme=="Blue"){
infoTitle.setTypeface(mcpeFont);
}

menuLayout.addView(infoTitle);

var settingsButton = new android.widget.Button(ctx);
if(theme=="Alternative"){
settingsButton.setText("Settings");
settingsButton.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
settingsButton.setText("Settings");
//settingsButton.setTypeface(mcpeFont);
settingsButton.setBackgroundDrawable(mcpeButtonImage);
}
settingsButton.setOnClickListener(new android.view.View.OnClickListener({
	onClick: function(viewarg){
	Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
	openMenu("modsettings");
	}			
}));
menuLayout.addView(settingsButton);
	
var aboutButton = new android.widget.Button(ctx);
if(theme=="Alternative"){
aboutButton.setText("About");
aboutButton.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
aboutButton.setText("About");
//infoButton.setTypeface(mcpeFont);
aboutButton.setBackgroundDrawable(mcpeButtonImage);
}else if(theme=="Blue"){
aboutButton.setText("About");
aboutButton.setBackgroundColor(android.graphics.Color.BLACK);
}
aboutButton.setOnClickListener(new android.view.View.OnClickListener({
	onClick: function(viewarg){
		Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
			var builder = new android.app.AlertDialog.Builder(ctx);
			builder.setTitle("About");
			builder.setMessage("Thanks for using AgameR MoreOptions PE! Special thanks to Ethan061903 for betatesting, MyNameIsTriXz, AntiModPE, Desno365 and everyone else who helped with making this mod possible!");
			builder.setPositiveButton("Follow @AgameR_Modder on Twitter", new android.content.DialogInterface.OnClickListener(){
			 
			                            onClick: function(p1, p2){
										
				Web("http://twitter.com/AgameR_Modder");
				p1.cancel();
				closeMenu();
										
										
			}							
			 
		    });
			builder.setNegativeButton("Ok", new android.content.DialogInterface.OnClickListener(){
			 
			                            onClick: function(p1, p2){
										
				p1.cancel();				
										
										
			}							
			 
		    });
										
		var dialog = builder.create();
		dialog.show();
	}			
}));
menuLayout.addView(aboutButton);

var changelogButton = new android.widget.Button(ctx);
if(theme=="Alternative"){
changelogButton.setText("Changelog");
changelogButton.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
changelogButton.setText("Changelog");
//changelogButton.setTypeface(mcpeFont);
changelogButton.setBackgroundDrawable(mcpeButtonImage);
}else if(theme=="Blue"){
changelogButton.setText("Changelog");
changelogButton.setBackgroundColor(android.graphics.Color.BLACK);
}
changelogButton.setOnClickListener(new android.view.View.OnClickListener({
	onClick: function(viewarg){
		Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
			var builder = new android.app.AlertDialog.Builder(ctx);
			builder.setTitle("Changelog");
			builder.setMessage(/*"v1.0 Beta 1: Initial release | v1.0 Beta 2: Name changed to AgameR MoreOptions PE, new icon, added coords option, added better grass, added every item eatable, added changelog, improved some things | v1.0 Beta 3: Added themes, added sneaking, improved fly, fixed grass being unbreakable | "*/"v1.0.0: Added zoom, InstaMine, X-ray, cheats, knockback, 64 item drop, improved layout, fixed some hacks and more");
			builder.setPositiveButton("Follow @AgameR_Modder on Twitter for updates", new android.content.DialogInterface.OnClickListener(){
			 
			                            onClick: function(p1, p2){
										
				Web("http://twitter.com/AgameR_Modder");
				p1.cancel();
				closeMenu();
										
										
			}							
			 
		    });
			builder.setNegativeButton("Ok", new android.content.DialogInterface.OnClickListener(){
			 
			                            onClick: function(p1, p2){
										
				p1.cancel();				
										
										
			}							
			 
		    });
										
		var dialog = builder.create();
		dialog.show();
	}			
}));
menuLayout.addView(changelogButton);

var updateButton = new android.widget.Button(ctx);
if(theme=="Alternative"){
updateButton.setText("Check for updates");
updateButton.setBackgroundColor(android.graphics.Color.GRAY);
}else if(theme=="MCPE"){
updateButton.setText("Check for updates");
//updateButton.setTypeface(mcpeFont);
updateButton.setBackgroundDrawable(mcpeButtonImage);
}else if(theme=="Blue"){
updateButton.setText("Check for updates");
updateButton.setBackgroundColor(android.graphics.Color.BLACK);
}
updateButton.setOnClickListener(new android.view.View.OnClickListener({
	onClick: function(viewarg){
		Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
        // check for updates
        new java.lang.Thread(new java.lang.Runnable()
        {
                run: function()
                {
                        checkLatestVersionMyMod();
                        if(latestVersion != CURRENT_VERSION && latestVersion != undefined)
                        {
                                // do something when the user doesn't have the latest version
                                clientMessage(ChatColor.BLUE+"[AgameR MoreOptions PE]"+ChatColor.WHITE+" There is a new version available (v"+latestVersion+")!");
                        }
                        else
                        {
                                currentActivity.runOnUiThread(new java.lang.Runnable(){run: function(){
                                        android.widget.Toast.makeText(currentActivity, new android.text.Html.fromHtml("<b>AgameR MoreOptions PE</b> You have the latest version"), 0).show();
                                }});
                        }
                }
        }).start();
	}			
}));
menuLayout.addView(updateButton);

//--------Add CheckBox--------//
/*var checked5 = false;
var button5 = new android.widget.CheckBox(ctx);
button5.setText('Button 5');
button5.setChecked(checked5);
button5.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checked5){
checked5 = true;
//Your code
}else{
checked5 = false;
//Your code
}
button5.setChecked(checked5);
}
}));
menuLayout.addView(button5);*/

//More buttons...
menu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
if(theme=="Alternative"){
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
}else if(theme=="MCPE"){
menu.setBackgroundDrawable(/*mcpeBackgroundImage*/new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
}
menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
}catch(error){
print('An error occured: ' + error);
}
}}));
}
//Exit button
function exit(){
var ctxe = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctxe.runOnUiThread(new java.lang.Runnable({ run: function(){
try{
var xLayout = new android.widget.LinearLayout(ctxe);
var xButton = new android.widget.Button(ctxe);
if(theme=="Alternative"){
xButton.setText('X');//Text
xButton.setTextColor(android.graphics.Color.WHITE);
}else if(theme=="MCPE"){
xButton.setBackgroundDrawable(mcpeExitButtonImage);
}else if(theme=="Blue"){
xButton.setText('X');//Text
xButton.setTextColor(android.graphics.Color.WHITE);
xButton.setTypeface(mcpeFont);
}
xButton.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
exitUI.dismiss(); //Close
menu.dismiss(); //Close
}
}));
xLayout.addView(xButton);
exitUI = new android.widget.PopupWindow(xLayout, dip2px(40), dip2px(40));
exitUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
if(crossButtonPosition=="right"){
exitUI.showAtLocation(ctxe.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
}else if(crossButtonPosition=="left"){
exitUI.showAtLocation(ctxe.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, 0, 0);
}
}catch(exception){
print(exception);
}
}}));
}

function closeMenu(){
var ctxe = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctxe.runOnUiThread(new java.lang.Runnable({ run: function(){
try{
exitUI.dismiss(); //Close
menu.dismiss(); //Close
}catch(exception){
print(exception);
};
}
}
));
}

function attackHook(attacker,victim){
if(State1==true){
if(Player.getEntity()==victim){
preventDefault();
}}
else if(State3==true){
if(Player.getEntity()==attacker){
Entity.setFireTicks(victim,9999);
}}else if(State10==true){
if(Player.getEntity()==attacker){
setVelX(victim, 4);
setVelY(victim, 2);
}}else if(State13==true){
if(Player.getEntity()==attacker){
Entity.rideAnimal(attacker, victim);
ModPE.showTipMessage("Tap Jump to jump off the entity");
}}}

function modTick(){
	var xcoord = Player.getX();
    var ycoord = Player.getY();
    var zcoord = Player.getZ();
	if(State8==true){
	ModPE.showTipMessage("X: "+parseInt(xcoord)+" Y: "+parseInt(ycoord)+" Z: "+parseInt(zcoord));
	}else if(State12==true){
	Level.setTime(1400);
	}else if(Entity.getHealth(Player.getEntity()) < 1){
	State = false;
	State1 = false;
	State2 = false;
	if(Level.getGameMode==1){
	Player.setCanFly(1);
	}else if(Level.getGameMode==0){
	Player.setCanFly(0);
	}
	State3 = false;
	State4 = false;
	ModPE.setGameSpeed(20);
	State5 = false;
	State6 = false;
	State7 = false;
	State8 = false;
	State9 = false;
	State10 = false;
	State11 = false;
	State12 = false;
	State13 = false;
	State14 = false;
	State15 = false;
	}
}

var activity=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
function Web(url){
  activity.runOnUiThread(new java.lang.Runnable({
    run: function(){
      activity.startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW,android.net.Uri.parse(url)));
      }
    }));
}

function useItem(x,y,z,i,b){
	if(State5==true){
		Server.sendChat(spamMessage);
	}else if(State15==true){
		Entity.setPosition(Player.getEntity(), x, y + 3, z);
	}
}

function saveFile (directory, filename) {
    try {
        directory = android.os.Environment.getExternalStorageDirectory ().getPath () + "/games/com.mojang/" + directory; // The file should be saved into the world directory.
        var newFile = new java.io.File (directory,filename);
        var directory = new java.io.File (directory);
        var success = directory.mkdirs (); // creates the directory if not already created
        if (!success){ // if not succeeded
            throw new java.io.IOException("Directory "+directory+ "cannot be created"); // throws an IOException. new java.io.IOException(String) has a string parameter as a message.
        }
        /*
        newFile.delete();
        Add the above if you want to replace the file.
        */
        newFile.createNewFile (); // creates a blank new file
        var outWrite = new java.io.OutputStreamWriter (new java.io.FileOutputStream (newFile)); // creates the output writer
        outWrite.append ("");
        outWrite.close(); // closes the writer; not necessary to close, but better do it
        return false; // tells that it succeeds; not necessary to catch, but better do it
    }
    catch(thrown){ // catches the error in the try block
        return thrown.toString(); // returns a human-readable description of the error. The most common one is java.io.IOException that there is no such file
    }
}

function readFile (directory, filename, wantBytes) { // wantBytes: true or false
    try{
        directory = android.os.Environment.getExternalStorageDirectory ().getPath () + "/games/com.mojang/" + directory;
        var inFile = new java.io.File(directory,filename);
        if (!inFile.isFile()) return "notfile"; // check if it is a file
        var inStream = new java.io.FileReader (inFile);
        if (wantBytes) {
            inStream.read (bytes); // stores the contents into bytes
            var bytes = new Array();
            return bytes;
        }
        var inBuffer = new java.io.BufferedReader (inStream);
        var line = "";
		var returner = "";
        while ((line = inBuffer.readLine ()) != null) { // read http://docs.oracle.com/javase/7/docs/api/java/io/BufferedReader.html#readLine()
            returner = returner + line + java.lang.System.getProperty ("line.seperator");
        }
        return returner;
    }
    catch(error){
        return error.toString();
    }
}

function addItemInv(itemId,amount,damage){
	var gamemode = Level.getGameMode();
	if(gamemode==0){
		Player.addItemInventory(itemId,amount,damage);
	}else if(gamemode==1){
		Entity.setCarriedItem(Player.getEntity(), itemId, 1, damage);
	}
}

function openMenu(menu){
	if(menu=="time"){
	ctx.runOnUiThread(new java.lang.Runnable(){
	run: function(){ 
	try{
	dialogGUI = new android.widget.PopupWindow();
	var btn = new android.widget.Button(ctx);
	var btn1 = new android.widget.Button(ctx);
	var dialogLayout = new android.widget.LinearLayout(ctx);
	dialogLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
	dialogLayout.addView(btn);
	dialogLayout.addView(btn1);
	var dialog = new android.app.Dialog(ctx);
	dialog.setContentView(dialogLayout);
	dialog.setTitle("Time");
	btn.setText("Day");
	btn1.setText("Night");
	dialogGUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
	dialog.show();
	btn.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
    Level.setTime(0);
	dialog.dismiss();
	}
	});
	btn1.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
    Level.setTime(12000);
	dialog.dismiss();
	}
	});
	} catch (e){
	print ("Error: "+e)
	}
	}});
	
	}else if(menu=="gamemode"){
	ctx.runOnUiThread(new java.lang.Runnable(){
	run: function(){ 
	try{
	dialogGUI = new android.widget.PopupWindow();
	var btn = new android.widget.Button(ctx);
	var btn1 = new android.widget.Button(ctx);
	var dialogLayout = new android.widget.LinearLayout(ctx);
	dialogLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
	dialogLayout.addView(btn);
	dialogLayout.addView(btn1);
	var dialog = new android.app.Dialog(ctx);
	dialog.setContentView(dialogLayout);
	dialog.setTitle("Gamemode");
	btn.setText("Survival");
	btn1.setText("Creative");
	dialogGUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
	dialog.show();
	btn.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
    Level.setGameMode(0);
	dialog.dismiss();
	}
	});
	btn1.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
    Level.setGameMode(1);
	dialog.dismiss();
	}
	});
	} catch (e){
	print ("Error: "+e)
	}
	}});
	
	}else if(menu=="additem"){
	ctx.runOnUiThread(new java.lang.Runnable(){
	run: function(){ 
	try{
	dialogGUI = new android.widget.PopupWindow();
	var btn = new android.widget.Button(ctx);
	var inputBar = new android.widget.EditText(ctx);
	var inputBar2 = new android.widget.EditText(ctx);
	var dialogLayout = new android.widget.LinearLayout(ctx);
	dialogLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
	dialogLayout.addView(inputBar);
	dialogLayout.addView(inputBar2);
	dialogLayout.addView(btn);
	var dialog = new android.app.Dialog(ctx);
	dialog.setContentView(dialogLayout);
	dialog.setTitle("Add item to inventory");
	btn.setText("Ok");
	inputBar.setHint("ID");
	inputBar2.setHint("Amount");
	dialogGUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
	dialog.show();
	btn.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
	var itemId = inputBar.getText();
	var amount = inputBar2.getText();
	addItemInv(itemId,amount,0);
	dialog.dismiss();
	}
	});
	} catch (e){
	print ("Error: "+e)
	}
	}});
	
	}else if(menu=="health"){
	ctx.runOnUiThread(new java.lang.Runnable(){
	run: function(){ 
	try{
	dialogGUI = new android.widget.PopupWindow();
	var btn = new android.widget.Button(ctx);
	var inputBar = new android.widget.EditText(ctx);
	var dialogLayout = new android.widget.LinearLayout(ctx);
	dialogLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
	dialogLayout.addView(inputBar);
	dialogLayout.addView(btn);
	var dialog = new android.app.Dialog(ctx);
	dialog.setContentView(dialogLayout);
	dialog.setTitle("Health");
	btn.setText("Ok");
	inputBar.setHint("0 = kill; 20 = full health");
	dialogGUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
	dialog.show();
	btn.setOnClickListener(new android.view.View.OnClickListener(){
	onClick: function(view){
	var health = inputBar.getText();
	Entity.setHealth(Player.getEntity(),health);
	dialog.dismiss();
	}
	});
	} catch (e){
	print ("Error: "+e)
	}
	}});
	
	}else if(menu=="modsettings"){
	ctx.runOnUiThread(new java.lang.Runnable(){
	run: function(){ 
	try{
	dialogGUI = new android.widget.PopupWindow();
	var dialogLayout = new android.widget.LinearLayout(ctx);
	dialogLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
	var dialog = new android.app.Dialog(ctx);
	dialog.setContentView(dialogLayout);
	dialog.setTitle("Mod Settings (WIP, settings don't save yet)");
	dialogGUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
	dialogGUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
	dialog.show();
	var layoutTitle = new android.widget.TextView(ctx);
	layoutTitle.setTextSize(12);
	layoutTitle.setText("Theme & Layout");//Title
	//layoutTitle.setTypeface(mcpeFont);
	layoutTitle.setTextColor(android.graphics.Color.WHITE); //Color
	layoutTitle.setGravity(android.view.Gravity.CENTER);

	dialogLayout.addView(layoutTitle);

	var exitPositionButton = new android.widget.Button(ctx);
	if(theme=="Alternative"&&crossButtonPosition=="right"){
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="Alternative"&&crossButtonPosition=="left"){
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"&&crossButtonPosition=="right"){
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="MCPE"&&crossButtonPosition=="left"){
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="Blue"&&crossButtonPosition=="right"){
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.BLACK);
	}else if(theme=="Blue"&&crossButtonPosition=="left"){
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.BLACK);
	}
	exitPositionButton.setOnClickListener(new android.view.View.OnClickListener({
		onClick: function(viewarg){
	if(theme=="Alternative"&&crossButtonPosition=="right"){
	crossButtonPosition = "left";
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="Alternative"&&crossButtonPosition=="left"){
	crossButtonPosition = "right";
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"&&crossButtonPosition=="right"){
	crossButtonPosition = "left";
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="MCPE"&&crossButtonPosition=="left"){
	crossButtonPosition = "right";
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="Blue"&&crossButtonPosition=="right"){
	crossButtonPosition = "left";
	exitPositionButton.setText("Exit button position | LEFT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.BLACK);
	}else if(theme=="Blue"&&crossButtonPosition=="left"){
	crossButtonPosition = "right";
	exitPositionButton.setText("Exit button position | RIGHT");
	exitPositionButton.setBackgroundColor(android.graphics.Color.BLACK);
	}
	}}));
	dialogLayout.addView(exitPositionButton);

	var themeButton = new android.widget.Button(ctx);
	if(theme=="Alternative"){
	themeButton.setText("Theme | Alternative");
	themeButton.setBackgroundColor(android.graphics.Color.GRAY);
	}else if(theme=="MCPE"){
	themeButton.setText("Theme | MCPE");
	themeButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="Blue"){
	themeButton.setText("Theme | Blue");
	themeButton.setBackgroundColor(android.graphics.Color.BLACK);
	}
	themeButton.setOnClickListener(new android.view.View.OnClickListener({
	onClick: function(viewarg){
	if(theme=="Alternative"){
	theme = "MCPE";
	themeButton.setText("Theme | MCPE");
	themeButton.setBackgroundDrawable(mcpeButtonImage);
	}else if(theme=="MCPE"){
	theme = "Blue";
	themeButton.setText("Theme | Blue");
	themeButton.setBackgroundColor(android.graphics.Color.BLACK);
	}else if(theme=="Blue"){
	theme = "Alternative";
	themeButton.setText("Theme | Alternative");
	themeButton.setBackgroundColor(android.graphics.Color.GRAY);
	}
	}}));
	dialogLayout.addView(themeButton);
	} catch (e){
	print ("Error: "+e)
	}
	}});

	}
	}

function xRay(onOrOff) {
if(onOrOff==1){
var RenderLayer = 1;
///////// CHESTS ARE NOW GLOWING OR HAVE THE SAME BRIGHTNESS AS TORCHES, ITS GOOD TO TROLL YOUR FRIENDS, GLOWSTONE AND ANOTHER BLOCK HAS NOW NO BRIGHTNESS, THE PLAYER CAN SEE NOW BETTER THROUGH BLOCKS
Block.setLightLevel(54, 15);
Block.setLightLevel(86, 0);
Block.setLightLevel(89, 0);

Block.setRenderLayer(1,RenderLayer);
Block.setRenderLayer(2,RenderLayer);
Block.setRenderLayer(3,RenderLayer);
Block.setRenderLayer(4,RenderLayer);
Block.setRenderLayer(5,RenderLayer);
Block.setRenderLayer(6,RenderLayer);
Block.setRenderLayer(7,RenderLayer);
Block.setRenderLayer(8,RenderLayer);
Block.setRenderLayer(9,RenderLayer);
Block.setRenderLayer(10,RenderLayer);
Block.setRenderLayer(11,RenderLayer);
Block.setRenderLayer(12,RenderLayer);
Block.setRenderLayer(13,RenderLayer);
Block.setRenderLayer(14,RenderLayer);
Block.setRenderLayer(15,RenderLayer);
Block.setRenderLayer(16,RenderLayer);
Block.setRenderLayer(17,RenderLayer);
Block.setRenderLayer(18,RenderLayer);
Block.setRenderLayer(19,RenderLayer);
Block.setRenderLayer(20,RenderLayer);
Block.setRenderLayer(21,RenderLayer);
Block.setRenderLayer(22,RenderLayer);
Block.setRenderLayer(23,RenderLayer);
Block.setRenderLayer(24,RenderLayer);
Block.setRenderLayer(25,RenderLayer);
Block.setRenderLayer(26,RenderLayer);
Block.setRenderLayer(27,RenderLayer);
Block.setRenderLayer(28,RenderLayer);
Block.setRenderLayer(29,RenderLayer);
Block.setRenderLayer(30,RenderLayer);
Block.setRenderLayer(31,RenderLayer);
Block.setRenderLayer(32,RenderLayer);
Block.setRenderLayer(33,RenderLayer);
Block.setRenderLayer(34,RenderLayer);
Block.setRenderLayer(35,RenderLayer);
Block.setRenderLayer(36,RenderLayer);
Block.setRenderLayer(37,RenderLayer);
Block.setRenderLayer(38,RenderLayer);
Block.setRenderLayer(39,RenderLayer);
Block.setRenderLayer(40,RenderLayer);
Block.setRenderLayer(41,RenderLayer);
Block.setRenderLayer(42,RenderLayer);
Block.setRenderLayer(43,RenderLayer);
Block.setRenderLayer(44,RenderLayer);
Block.setRenderLayer(45,RenderLayer);
Block.setRenderLayer(46,RenderLayer);
Block.setRenderLayer(47,RenderLayer);
Block.setRenderLayer(48,RenderLayer);
Block.setRenderLayer(49,RenderLayer);
Block.setRenderLayer(50,RenderLayer);
Block.setRenderLayer(51,RenderLayer);
Block.setRenderLayer(52,RenderLayer);
Block.setRenderLayer(53,RenderLayer);
Block.setRenderLayer(54,RenderLayer);
Block.setRenderLayer(55,RenderLayer);
Block.setRenderLayer(56,RenderLayer);
Block.setRenderLayer(57,RenderLayer);
Block.setRenderLayer(58,RenderLayer);
Block.setRenderLayer(59,RenderLayer);
Block.setRenderLayer(60,RenderLayer);
Block.setRenderLayer(61,RenderLayer);
Block.setRenderLayer(62,RenderLayer);
Block.setRenderLayer(63,RenderLayer);
Block.setRenderLayer(64,RenderLayer);
Block.setRenderLayer(65,RenderLayer);
Block.setRenderLayer(66,RenderLayer);
Block.setRenderLayer(67,RenderLayer);
Block.setRenderLayer(68,RenderLayer);
Block.setRenderLayer(69,RenderLayer);
Block.setRenderLayer(70,RenderLayer);
Block.setRenderLayer(71,RenderLayer);
Block.setRenderLayer(72,RenderLayer);
Block.setRenderLayer(73,RenderLayer);
Block.setRenderLayer(74,RenderLayer);
Block.setRenderLayer(75,RenderLayer);
Block.setRenderLayer(76,RenderLayer);
Block.setRenderLayer(77,RenderLayer);
Block.setRenderLayer(78,RenderLayer);
Block.setRenderLayer(79,RenderLayer);
Block.setRenderLayer(80,RenderLayer);
Block.setRenderLayer(81,RenderLayer);
Block.setRenderLayer(82,RenderLayer);
Block.setRenderLayer(83,RenderLayer);
Block.setRenderLayer(84,RenderLayer);
Block.setRenderLayer(85,RenderLayer);
Block.setRenderLayer(86,RenderLayer);
Block.setRenderLayer(87,RenderLayer);
Block.setRenderLayer(88,RenderLayer);
Block.setRenderLayer(89,RenderLayer);
Block.setRenderLayer(90,RenderLayer);
Block.setRenderLayer(91,RenderLayer);
Block.setRenderLayer(92,RenderLayer);
Block.setRenderLayer(93,RenderLayer);
Block.setRenderLayer(94,RenderLayer);
Block.setRenderLayer(95,RenderLayer);
Block.setRenderLayer(96,RenderLayer);
Block.setRenderLayer(97,RenderLayer);
Block.setRenderLayer(98,RenderLayer);
Block.setRenderLayer(99,RenderLayer);
Block.setRenderLayer(100,RenderLayer);
Block.setRenderLayer(101,RenderLayer);
Block.setRenderLayer(102,RenderLayer);
Block.setRenderLayer(103,RenderLayer);
Block.setRenderLayer(104,RenderLayer);
Block.setRenderLayer(105,RenderLayer);
Block.setRenderLayer(106,RenderLayer);
Block.setRenderLayer(107,RenderLayer);
Block.setRenderLayer(108,RenderLayer);
Block.setRenderLayer(109,RenderLayer);
Block.setRenderLayer(110,RenderLayer);
Block.setRenderLayer(111,RenderLayer);
Block.setRenderLayer(112,RenderLayer);
Block.setRenderLayer(13,RenderLayer);
Block.setRenderLayer(114,RenderLayer);
Block.setRenderLayer(115,RenderLayer);
Block.setRenderLayer(117,RenderLayer);
Block.setRenderLayer(118,RenderLayer);
Block.setRenderLayer(119,RenderLayer);
Block.setRenderLayer(120,RenderLayer);
Block.setRenderLayer(121,RenderLayer);
Block.setRenderLayer(122,RenderLayer);
Block.setRenderLayer(123,RenderLayer);
Block.setRenderLayer(124,RenderLayer);
Block.setRenderLayer(125,RenderLayer);
Block.setRenderLayer(126,RenderLayer);
Block.setRenderLayer(127,RenderLayer);
Block.setRenderLayer(128,RenderLayer);
Block.setRenderLayer(129,RenderLayer);
Block.setRenderLayer(130,RenderLayer);
Block.setRenderLayer(131,RenderLayer);
Block.setRenderLayer(132,RenderLayer);
Block.setRenderLayer(133,RenderLayer);
Block.setRenderLayer(134,RenderLayer);
Block.setRenderLayer(135,RenderLayer);
Block.setRenderLayer(136,RenderLayer);
Block.setRenderLayer(137,RenderLayer);
Block.setRenderLayer(138,RenderLayer);
Block.setRenderLayer(139,RenderLayer);
Block.setRenderLayer(140,RenderLayer);
Block.setRenderLayer(141,RenderLayer);
Block.setRenderLayer(142,RenderLayer);
Block.setRenderLayer(143,RenderLayer);
Block.setRenderLayer(144,RenderLayer);
Block.setRenderLayer(145,RenderLayer);
Block.setRenderLayer(146,RenderLayer);
Block.setRenderLayer(147,RenderLayer);
Block.setRenderLayer(148,RenderLayer);
Block.setRenderLayer(149,RenderLayer);
Block.setRenderLayer(150,RenderLayer);
Block.setRenderLayer(151,RenderLayer);
Block.setRenderLayer(152,RenderLayer);
Block.setRenderLayer(153,RenderLayer);
Block.setRenderLayer(154,RenderLayer);
Block.setRenderLayer(155,RenderLayer);
Block.setRenderLayer(156,RenderLayer);
Block.setRenderLayer(157,RenderLayer);
Block.setRenderLayer(158,RenderLayer);
Block.setRenderLayer(159,RenderLayer);
Block.setRenderLayer(160,RenderLayer);
Block.setRenderLayer(161,RenderLayer);
Block.setRenderLayer(162,RenderLayer);
Block.setRenderLayer(163,RenderLayer);
Block.setRenderLayer(164,RenderLayer);
Block.setRenderLayer(165,RenderLayer);
Block.setRenderLayer(166,RenderLayer);
Block.setRenderLayer(167,RenderLayer);
Block.setRenderLayer(168,RenderLayer);
Block.setRenderLayer(169,RenderLayer);
Block.setRenderLayer(170,RenderLayer);
Block.setRenderLayer(171,RenderLayer);
Block.setRenderLayer(172,RenderLayer);
Block.setRenderLayer(173,RenderLayer);
Block.setRenderLayer(174,RenderLayer);
Block.setRenderLayer(175,RenderLayer);
Block.setRenderLayer(176,RenderLayer);
Block.setRenderLayer(177,RenderLayer);
Block.setRenderLayer(178,RenderLayer);
Block.setRenderLayer(179,RenderLayer);
Block.setRenderLayer(180,RenderLayer);
Block.setRenderLayer(181,RenderLayer);
Block.setRenderLayer(182,RenderLayer);
Block.setRenderLayer(183,RenderLayer);
Block.setRenderLayer(184,RenderLayer);
Block.setRenderLayer(185,RenderLayer);
Block.setRenderLayer(186,RenderLayer);
Block.setRenderLayer(187,RenderLayer);
Block.setRenderLayer(188,RenderLayer);
Block.setRenderLayer(189,RenderLayer);
Block.setRenderLayer(190,RenderLayer);
Block.setRenderLayer(191,RenderLayer);
Block.setRenderLayer(192,RenderLayer);
Block.setRenderLayer(193,RenderLayer);
Block.setRenderLayer(194,RenderLayer);
Block.setRenderLayer(195,RenderLayer);
Block.setRenderLayer(196,RenderLayer);
Block.setRenderLayer(197,RenderLayer);
Block.setRenderLayer(198,RenderLayer);
Block.setRenderLayer(199,RenderLayer);
Block.setRenderLayer(200,RenderLayer);
Block.setRenderLayer(201,RenderLayer);
Block.setRenderLayer(202,RenderLayer);
Block.setRenderLayer(203,RenderLayer);
Block.setRenderLayer(204,RenderLayer);
Block.setRenderLayer(205,RenderLayer);
Block.setRenderLayer(206,RenderLayer);
Block.setRenderLayer(207,RenderLayer);
Block.setRenderLayer(208,RenderLayer);
Block.setRenderLayer(209,RenderLayer);
Block.setRenderLayer(210,RenderLayer);
Block.setRenderLayer(211,RenderLayer);
Block.setRenderLayer(212,RenderLayer);
Block.setRenderLayer(213,RenderLayer);
Block.setRenderLayer(214,RenderLayer);
Block.setRenderLayer(215,RenderLayer);
Block.setRenderLayer(217,RenderLayer);
Block.setRenderLayer(218,RenderLayer);
Block.setRenderLayer(219,RenderLayer);
Block.setRenderLayer(220,RenderLayer);
Block.setRenderLayer(221,RenderLayer);
Block.setRenderLayer(222,RenderLayer);
Block.setRenderLayer(223,RenderLayer);
Block.setRenderLayer(224,RenderLayer);
Block.setRenderLayer(225,RenderLayer);
Block.setRenderLayer(226,RenderLayer);
Block.setRenderLayer(227,RenderLayer);
Block.setRenderLayer(228,RenderLayer);
Block.setRenderLayer(229,RenderLayer);
Block.setRenderLayer(230,RenderLayer);
Block.setRenderLayer(231,RenderLayer);
Block.setRenderLayer(232,RenderLayer);
Block.setRenderLayer(233,RenderLayer);
Block.setRenderLayer(234,RenderLayer);
Block.setRenderLayer(235,RenderLayer);
Block.setRenderLayer(236,RenderLayer);
Block.setRenderLayer(237,RenderLayer);
Block.setRenderLayer(238,RenderLayer);
Block.setRenderLayer(239,RenderLayer);
Block.setRenderLayer(240,RenderLayer);
Block.setRenderLayer(241,RenderLayer);
Block.setRenderLayer(242,RenderLayer);
Block.setRenderLayer(243,RenderLayer);
Block.setRenderLayer(244,RenderLayer);
Block.setRenderLayer(245,RenderLayer);
Block.setRenderLayer(246,RenderLayer);
Block.setRenderLayer(247,RenderLayer);
Block.setRenderLayer(248,RenderLayer);
Block.setRenderLayer(249,RenderLayer);
Block.setRenderLayer(250,RenderLayer);
Block.setRenderLayer(251,RenderLayer);
Block.setRenderLayer(252,RenderLayer);
Block.setRenderLayer(253,RenderLayer);
Block.setRenderLayer(254,RenderLayer);
Block.setRenderLayer(255,RenderLayer);
}else if(onOrOff==0){
OpaqLayer = 0;

Block.setLightLevel(54, 0);
Block.setLightLevel(86, 15);
Block.setLightLevel(89, 15);

Block.setRenderLayer(1,OpaqLayer);
Block.setRenderLayer(2,OpaqLayer);
Block.setRenderLayer(3,OpaqLayer);
Block.setRenderLayer(4,OpaqLayer);
Block.setRenderLayer(5,OpaqLayer);
Block.setRenderLayer(6,OpaqLayer);
Block.setRenderLayer(7,OpaqLayer);
Block.setRenderLayer(8,OpaqLayer);
Block.setRenderLayer(9,OpaqLayer);
Block.setRenderLayer(10,OpaqLayer);
Block.setRenderLayer(11,OpaqLayer);
Block.setRenderLayer(12,OpaqLayer);
Block.setRenderLayer(13,OpaqLayer);
Block.setRenderLayer(14,OpaqLayer);
Block.setRenderLayer(15,OpaqLayer);
Block.setRenderLayer(17,OpaqLayer);
Block.setRenderLayer(18,OpaqLayer);
Block.setRenderLayer(19,OpaqLayer);
Block.setRenderLayer(20,OpaqLayer);
Block.setRenderLayer(21,OpaqLayer);
Block.setRenderLayer(22,OpaqLayer);
Block.setRenderLayer(23,OpaqLayer);
Block.setRenderLayer(24,OpaqLayer);
Block.setRenderLayer(25,OpaqLayer);
Block.setRenderLayer(26,OpaqLayer);
Block.setRenderLayer(27,OpaqLayer);
Block.setRenderLayer(28,OpaqLayer);
Block.setRenderLayer(29,OpaqLayer);
Block.setRenderLayer(30,OpaqLayer);
Block.setRenderLayer(31,OpaqLayer);
Block.setRenderLayer(32,OpaqLayer);
Block.setRenderLayer(33,OpaqLayer);
Block.setRenderLayer(34,OpaqLayer);
Block.setRenderLayer(35,OpaqLayer);
Block.setRenderLayer(36,OpaqLayer);
Block.setRenderLayer(37,OpaqLayer);
Block.setRenderLayer(38,OpaqLayer);
Block.setRenderLayer(39,OpaqLayer);
Block.setRenderLayer(40,OpaqLayer);
Block.setRenderLayer(41,OpaqLayer);
Block.setRenderLayer(42,OpaqLayer);
Block.setRenderLayer(43,OpaqLayer);
Block.setRenderLayer(44,OpaqLayer);
Block.setRenderLayer(45,OpaqLayer);
Block.setRenderLayer(46,OpaqLayer);
Block.setRenderLayer(47,OpaqLayer);
Block.setRenderLayer(48,OpaqLayer);
Block.setRenderLayer(49,OpaqLayer);
Block.setRenderLayer(50,OpaqLayer);
Block.setRenderLayer(51,OpaqLayer);
Block.setRenderLayer(52,OpaqLayer);
Block.setRenderLayer(53,OpaqLayer);
Block.setRenderLayer(54,OpaqLayer);
Block.setRenderLayer(55,OpaqLayer);
Block.setRenderLayer(56,OpaqLayer);
Block.setRenderLayer(57,OpaqLayer);
Block.setRenderLayer(58,OpaqLayer);
Block.setRenderLayer(59,OpaqLayer);
Block.setRenderLayer(60,OpaqLayer);
Block.setRenderLayer(61,OpaqLayer);
Block.setRenderLayer(62,OpaqLayer);
Block.setRenderLayer(63,OpaqLayer);
Block.setRenderLayer(64,OpaqLayer);
Block.setRenderLayer(65,OpaqLayer);
Block.setRenderLayer(66,OpaqLayer);
Block.setRenderLayer(67,OpaqLayer);
Block.setRenderLayer(68,OpaqLayer);
Block.setRenderLayer(69,OpaqLayer);
Block.setRenderLayer(70,OpaqLayer);
Block.setRenderLayer(71,OpaqLayer);
Block.setRenderLayer(72,OpaqLayer);
Block.setRenderLayer(73,OpaqLayer);
Block.setRenderLayer(74,OpaqLayer);
Block.setRenderLayer(75,OpaqLayer);
Block.setRenderLayer(76,OpaqLayer);
Block.setRenderLayer(77,OpaqLayer);
Block.setRenderLayer(78,OpaqLayer);
Block.setRenderLayer(79,OpaqLayer);
Block.setRenderLayer(80,OpaqLayer);
Block.setRenderLayer(81,OpaqLayer);
Block.setRenderLayer(82,OpaqLayer);
Block.setRenderLayer(83,OpaqLayer);
Block.setRenderLayer(84,OpaqLayer);
Block.setRenderLayer(85,OpaqLayer);
Block.setRenderLayer(86,OpaqLayer);
Block.setRenderLayer(87,OpaqLayer);
Block.setRenderLayer(88,OpaqLayer);
Block.setRenderLayer(89,OpaqLayer);
Block.setRenderLayer(90,OpaqLayer);
Block.setRenderLayer(91,OpaqLayer);
Block.setRenderLayer(92,OpaqLayer);
Block.setRenderLayer(93,OpaqLayer);
Block.setRenderLayer(94,OpaqLayer);
Block.setRenderLayer(95,OpaqLayer);
Block.setRenderLayer(96,OpaqLayer);
Block.setRenderLayer(97,OpaqLayer);
Block.setRenderLayer(98,OpaqLayer);
Block.setRenderLayer(99,OpaqLayer);
Block.setRenderLayer(100,OpaqLayer);
Block.setRenderLayer(101,OpaqLayer);
Block.setRenderLayer(102,OpaqLayer);
Block.setRenderLayer(103,OpaqLayer);
Block.setRenderLayer(104,OpaqLayer);
Block.setRenderLayer(105,OpaqLayer);
Block.setRenderLayer(106,OpaqLayer);
Block.setRenderLayer(107,OpaqLayer);
Block.setRenderLayer(108,OpaqLayer);
Block.setRenderLayer(109,OpaqLayer);
Block.setRenderLayer(110,OpaqLayer);
Block.setRenderLayer(111,OpaqLayer);
Block.setRenderLayer(112,OpaqLayer);
Block.setRenderLayer(13,OpaqLayer);
Block.setRenderLayer(114,OpaqLayer);
Block.setRenderLayer(115,OpaqLayer);
Block.setRenderLayer(117,OpaqLayer);
Block.setRenderLayer(118,OpaqLayer);
Block.setRenderLayer(119,OpaqLayer);
Block.setRenderLayer(120,OpaqLayer);
Block.setRenderLayer(121,OpaqLayer);
Block.setRenderLayer(122,OpaqLayer);
Block.setRenderLayer(123,OpaqLayer);
Block.setRenderLayer(124,OpaqLayer);
Block.setRenderLayer(125,OpaqLayer);
Block.setRenderLayer(126,OpaqLayer);
Block.setRenderLayer(127,OpaqLayer);
Block.setRenderLayer(128,OpaqLayer);
Block.setRenderLayer(129,OpaqLayer);
Block.setRenderLayer(130,OpaqLayer);
Block.setRenderLayer(131,OpaqLayer);
Block.setRenderLayer(132,OpaqLayer);
Block.setRenderLayer(133,OpaqLayer);
Block.setRenderLayer(134,OpaqLayer);
Block.setRenderLayer(135,OpaqLayer);
Block.setRenderLayer(136,OpaqLayer);
Block.setRenderLayer(137,OpaqLayer);
Block.setRenderLayer(138,OpaqLayer);
Block.setRenderLayer(139,OpaqLayer);
Block.setRenderLayer(140,OpaqLayer);
Block.setRenderLayer(141,OpaqLayer);
Block.setRenderLayer(142,OpaqLayer);
Block.setRenderLayer(143,OpaqLayer);
Block.setRenderLayer(144,OpaqLayer);
Block.setRenderLayer(145,OpaqLayer);
Block.setRenderLayer(146,OpaqLayer);
Block.setRenderLayer(147,OpaqLayer);
Block.setRenderLayer(148,OpaqLayer);
Block.setRenderLayer(149,OpaqLayer);
Block.setRenderLayer(150,OpaqLayer);
Block.setRenderLayer(151,OpaqLayer);
Block.setRenderLayer(152,OpaqLayer);
Block.setRenderLayer(153,OpaqLayer);
Block.setRenderLayer(154,OpaqLayer);
Block.setRenderLayer(155,OpaqLayer);
Block.setRenderLayer(156,OpaqLayer);
Block.setRenderLayer(157,OpaqLayer);
Block.setRenderLayer(158,OpaqLayer);
Block.setRenderLayer(159,OpaqLayer);
Block.setRenderLayer(160,OpaqLayer);
Block.setRenderLayer(161,OpaqLayer);
Block.setRenderLayer(162,OpaqLayer);
Block.setRenderLayer(163,OpaqLayer);
Block.setRenderLayer(164,OpaqLayer);
Block.setRenderLayer(165,OpaqLayer);
Block.setRenderLayer(166,OpaqLayer);
Block.setRenderLayer(167,OpaqLayer);
Block.setRenderLayer(168,OpaqLayer);
Block.setRenderLayer(169,OpaqLayer);
Block.setRenderLayer(170,OpaqLayer);
Block.setRenderLayer(171,OpaqLayer);
Block.setRenderLayer(172,OpaqLayer);
Block.setRenderLayer(173,OpaqLayer);
Block.setRenderLayer(174,OpaqLayer);
Block.setRenderLayer(175,OpaqLayer);
Block.setRenderLayer(176,OpaqLayer);
Block.setRenderLayer(177,OpaqLayer);
Block.setRenderLayer(178,OpaqLayer);
Block.setRenderLayer(179,OpaqLayer);
Block.setRenderLayer(180,OpaqLayer);
Block.setRenderLayer(181,OpaqLayer);
Block.setRenderLayer(182,OpaqLayer);
Block.setRenderLayer(183,OpaqLayer);
Block.setRenderLayer(184,OpaqLayer);
Block.setRenderLayer(185,OpaqLayer);
Block.setRenderLayer(186,OpaqLayer);
Block.setRenderLayer(187,OpaqLayer);
Block.setRenderLayer(188,OpaqLayer);
Block.setRenderLayer(189,OpaqLayer);
Block.setRenderLayer(190,OpaqLayer);
Block.setRenderLayer(191,OpaqLayer);
Block.setRenderLayer(192,OpaqLayer);
Block.setRenderLayer(193,OpaqLayer);
Block.setRenderLayer(194,OpaqLayer);
Block.setRenderLayer(195,OpaqLayer);
Block.setRenderLayer(196,OpaqLayer);
Block.setRenderLayer(197,OpaqLayer);
Block.setRenderLayer(198,OpaqLayer);
Block.setRenderLayer(199,OpaqLayer);
Block.setRenderLayer(200,OpaqLayer);
Block.setRenderLayer(201,OpaqLayer);
Block.setRenderLayer(202,OpaqLayer);
Block.setRenderLayer(203,OpaqLayer);
Block.setRenderLayer(204,OpaqLayer);
Block.setRenderLayer(205,OpaqLayer);
Block.setRenderLayer(206,OpaqLayer);
Block.setRenderLayer(207,OpaqLayer);
Block.setRenderLayer(208,OpaqLayer);
Block.setRenderLayer(209,OpaqLayer);
Block.setRenderLayer(210,OpaqLayer);
Block.setRenderLayer(211,OpaqLayer);
Block.setRenderLayer(212,OpaqLayer);
Block.setRenderLayer(213,OpaqLayer);
Block.setRenderLayer(214,OpaqLayer);
Block.setRenderLayer(215,OpaqLayer);
Block.setRenderLayer(217,OpaqLayer);
Block.setRenderLayer(218,OpaqLayer);
Block.setRenderLayer(219,OpaqLayer);
Block.setRenderLayer(220,OpaqLayer);
Block.setRenderLayer(221,OpaqLayer);
Block.setRenderLayer(222,OpaqLayer);
Block.setRenderLayer(223,OpaqLayer);
Block.setRenderLayer(224,OpaqLayer);
Block.setRenderLayer(225,OpaqLayer);
Block.setRenderLayer(226,OpaqLayer);
Block.setRenderLayer(227,OpaqLayer);
Block.setRenderLayer(228,OpaqLayer);
Block.setRenderLayer(229,OpaqLayer);
Block.setRenderLayer(230,OpaqLayer);
Block.setRenderLayer(231,OpaqLayer);
Block.setRenderLayer(232,OpaqLayer);
Block.setRenderLayer(233,OpaqLayer);
Block.setRenderLayer(234,OpaqLayer);
Block.setRenderLayer(235,OpaqLayer);
Block.setRenderLayer(236,OpaqLayer);
Block.setRenderLayer(237,OpaqLayer);
Block.setRenderLayer(238,OpaqLayer);
Block.setRenderLayer(239,OpaqLayer);
Block.setRenderLayer(240,OpaqLayer);
Block.setRenderLayer(241,OpaqLayer);
Block.setRenderLayer(242,OpaqLayer);
Block.setRenderLayer(243,OpaqLayer);
Block.setRenderLayer(244,OpaqLayer);
Block.setRenderLayer(245,OpaqLayer);
Block.setRenderLayer(246,OpaqLayer);
Block.setRenderLayer(247,OpaqLayer);
Block.setRenderLayer(248,OpaqLayer);
Block.setRenderLayer(249,OpaqLayer);
Block.setRenderLayer(250,OpaqLayer);
Block.setRenderLayer(251,OpaqLayer);
Block.setRenderLayer(252,OpaqLayer);
Block.setRenderLayer(253,OpaqLayer);
Block.setRenderLayer(254,OpaqLayer);
Block.setRenderLayer(255,OpaqLayer);
}
var originalTile = getTile(Player.getX(),Player.getY(),Player.getZ());
setTile(Player.getX(),Player.getY(),Player.getZ(),originalTile,0);
}


//*Copyright & Permissions*
//-------------
//You may:
//Edit this mod for personal use
//Create a review of this mod, as long as you give me credits and you put the link of this mod in the description
//
//You may NOT:
//Distribute this mod without permission of peacestorm
//Claim that this mod is yours
//Include this mod in your modpack without permission of peacestorm
//Use code of this mod in your own mod without permission of peacestorm
//Monetize this mod by using AdFly or any other monetizing method
//
//For things that aren't listed here, always ask me


//*Credits*
//-----------
//Creator: peacestorm

//*Mod info*
//------------
//Mod version: 1.0.0-pre
//For full changelog, look at the mod's menu ingame


//*Ideas*
//---------
//If you have any ideas for this mod, please send them to my MC-Forum account, or on Twitter: @AgameR_Modder